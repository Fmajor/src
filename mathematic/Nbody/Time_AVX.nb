(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    453125,       9716]
NotebookOptionsPosition[    451466,       9661]
NotebookOutlinePosition[    451806,       9676]
CellTagsIndexPosition[    451763,       9673]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"Data", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/wanglong/Dropbox/Datas/NBPrf/256k_b_avx/time.dat\>\"", ",", 
     "\"\<table\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.608373778944538*^9, 3.608373783941246*^9}, {
  3.608373825657887*^9, 3.608373835929042*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Data", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/wanglong/Dropbox/Datas/NBPrf/1M_hyd/time.dat\>\"", ",", 
     "\"\<table\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.608396967325616*^9, 3.60839697058256*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Data", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/wanglong/Dropbox/Datas/NBPrf/1M_hyd/GC_time.dat\>\"", ",", 
     "\"\<table\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.608399281713003*^9, 3.608399294921287*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Data", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<C:\\\\Users\\\\lwang\\\\OneDrive\\\\Documents\\\\Datas\\\\NBPrf\\\\\
256k_b_avx\\\\time_ks.dat\>\"", ",", "\"\<table\>\""}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.623579569842721*^9, 3.6235796276241603`*^9}, {
  3.6235800395930376`*^9, 3.6235800397961664`*^9}, {3.623580257773798*^9, 
  3.6235802618844233`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Data", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<C:\\\\Users\\\\lwang\\\\Documents\\\\Dropbox\\\\Datas\\\\NBPrf\\\\1M_\
hyd\\\\ntime.dat\>\"", ",", "\"\<table\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.6193479488581567`*^9, {3.61934804230344*^9, 3.619348052613901*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Data", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<C:\\\\Users\\\\lwang\\\\OneDrive\\\\Documents\\\\Datas\\\\NBPrf\\\\\
1M_hyd\\\\R7_IMF01_7.5.dat\>\"", ",", "\"\<table\>\""}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6343609705153933`*^9, 3.634360999448971*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"Data", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "i"}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"Length", "@", 
      RowBox[{"Data", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.608373880599774*^9, 3.608373880935091*^9}, {
  3.608374037026362*^9, 3.608374038492778*^9}, {3.608375688714076*^9, 
  3.6083757150002832`*^9}, {3.6235796337666965`*^9, 3.6235796344385805`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "\<\"PE\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "\<\"N\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "\<\"Total\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "\<\"Inti.\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "\<\"Intgrt\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "\<\"Reg.\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "\<\"Irr.\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "\<\"Pred.\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "\<\"Init.B.\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "\<\"Mdot\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "\<\"Move\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "\<\"Comm.I.\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "\<\"Comm.R.\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "\<\"Send.I.\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "\<\"Send.R.\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "\<\"KS\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", "\<\"Adjust\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", "\<\"OUT\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "\<\"Barr.\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "\<\"Barr.I.\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "\<\"Barr.R.\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"22", ",", "\<\"Reg.GPU.S\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "\<\"Reg.GPU.P\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", "\<\"Comm.Adj.\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25", ",", "\<\"Mdot.Fic.\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", "\<\"Mdot.Fc.\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", "\<\"Mdot.Pot.\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "\<\"Mdot.EC.\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"29", ",", "\<\"Sort.B.\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"30", ",", "\<\"HighV\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"31", ",", "\<\"KS.Init.B\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"32", ",", "\<\"KS.Int.S\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"33", ",", "\<\"KS.Int.P\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"34", ",", "\<\"KS.Comm.\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"35", ",", "\<\"KS.Barr.\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"36", ",", "\<\"KS.Move\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"37", ",", "\<\"KS.Cmb.\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"38", ",", "\<\"KS.Insert\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"39", ",", "\<\"KS.Init.\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"40", ",", "\<\"KS.Term.\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"41", ",", "\<\"Hiar.\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"42", ",", "\<\"KS.UP\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"43", ",", "\<\"KS.P\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"44", ",", "\<\"xtsub1\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"45", ",", "\<\"xtsub2\"\>"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.608374038912725*^9, 3.60837546714607*^9, 3.6083757157714567`*^9, 
   3.608379519124537*^9, 3.6083921675780907`*^9, 3.60839225321834*^9, 
   3.608396974620615*^9, 3.6193480589733353`*^9, 3.623579634938588*^9, {
   3.6235802503180704`*^9, 3.623580264307074*^9}, 3.634361056276329*^9, 
   3.6343617858763885`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"labels", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<\!\(\*SubscriptBox[\(N\), \(cks\)]\)=40\>\"", ",", 
     "\"\<\!\(\*SubscriptBox[\(N\), \(cks\)]\)=32\>\"", ",", 
     "\"\<Non-MPI\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"pie", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"PieChart", "[", 
     RowBox[{
      RowBox[{"Data", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"2", ";;", "4"}], ",", "#"}], "]"}], "]"}], ",", 
      RowBox[{"ChartLabels", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Placed", "[", 
          RowBox[{"labels", ",", "\"\<RadialCenter\>\""}], "]"}], ",", 
         "None"}], "}"}]}], ",", 
      RowBox[{"ChartLegends", "\[Rule]", 
       RowBox[{"Data", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "#"}], "]"}], "]"}]}], ",", 
      RowBox[{"ChartStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "Black", ",", "White", ",", "Green", ",", "Yellow", ",", "Red", ",", 
         "Blue", ",", "Orange", ",", "Purple", ",", "Gray", ",", "Cyan", ",", 
         "Magenta", ",", "Brown", ",", "Pink", ",", "LightRed", ",", 
         "LightBlue", ",", "LightYellow", ",", "LightBrown"}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}], "&"}], "@", 
   RowBox[{"(*", 
    RowBox[{"{", 
     RowBox[{
     "7", ",", "8", ",", "23", ",", "9", ",", "13", ",", "14", ",", "15", ",",
       "19", ",", "25", ",", "26", ",", "38", ",", "39", ",", "40", ",", "41",
       ",", "42", ",", "46", ",", "47"}], "}"}], "*)"}], 
   RowBox[{"{", 
    RowBox[{
    "3", ",", "4", ",", "5", ",", "9", ",", "8", ",", "6", ",", "7", ",", 
     "10", ",", "11", ",", "12"}], "}"}]}]}]}], "Input",
 CellChangeTimes->{{3.6083750998628407`*^9, 3.608375105660255*^9}, {
   3.608375149213779*^9, 3.608375430018476*^9}, {3.6083754851850986`*^9, 
   3.6083755102251177`*^9}, {3.608375573456366*^9, 3.6083756153522787`*^9}, {
   3.608375738786124*^9, 3.608375773137261*^9}, {3.608375964564005*^9, 
   3.608375964924616*^9}, {3.608376138553547*^9, 3.6083761421247*^9}, {
   3.6083763600742617`*^9, 3.608376360305162*^9}, {3.608376473846772*^9, 
   3.6083764875754547`*^9}, {3.6083768594050417`*^9, 3.608376941841711*^9}, 
   3.608376990884412*^9, {3.608377047832724*^9, 3.6083771679950123`*^9}, {
   3.608377210626912*^9, 3.608377241059637*^9}, {3.608377278648449*^9, 
   3.608377398328175*^9}, {3.6083774308925962`*^9, 3.608377549885696*^9}, {
   3.608377623366518*^9, 3.6083776441162443`*^9}, {3.608377682522896*^9, 
   3.608377769007514*^9}, {3.6083778745159187`*^9, 3.608377957538741*^9}, {
   3.6083779943652554`*^9, 3.608378037918091*^9}, {3.608378119953884*^9, 
   3.608378136451845*^9}, {3.6083781778487253`*^9, 3.608378305277128*^9}, {
   3.608379443412332*^9, 3.608379452030364*^9}, {3.608379539816409*^9, 
   3.608379551183152*^9}, {3.608388810706038*^9, 3.608388822876993*^9}, {
   3.608389639979663*^9, 3.608389640529893*^9}, {3.6083896720229673`*^9, 
   3.608389674047367*^9}, {3.608389713306919*^9, 3.6083897225197353`*^9}, {
   3.608389772275366*^9, 3.608389786870713*^9}, {3.608389818882036*^9, 
   3.608389819950159*^9}, {3.608389907143551*^9, 3.608389941224494*^9}, {
   3.608396994876841*^9, 3.608397045654542*^9}, {3.608399384787157*^9, 
   3.608399387497827*^9}, {3.608399423454505*^9, 3.608399424773077*^9}, {
   3.6235796806342382`*^9, 3.623579704355668*^9}, {3.6235797711367483`*^9, 
   3.623579814621137*^9}, {3.623580273746913*^9, 3.6235803132444425`*^9}, {
   3.6235803560449305`*^9, 3.6235804444779234`*^9}, 3.6235805625477924`*^9, {
   3.623581142024344*^9, 3.6235811548299055`*^9}, {3.6235812740826454`*^9, 
   3.623581282462877*^9}, {3.623581382448615*^9, 3.623581383060547*^9}, {
   3.6242366782093287`*^9, 3.624236693459374*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$5505$5758 = False, DynamicChart`click$5508$5758 = 
       False, DynamicChart`click$5511$5758 = False, 
       DynamicChart`click$5514$5758 = False, DynamicChart`click$5517$5758 = 
       False, DynamicChart`click$5520$5758 = False, 
       DynamicChart`click$5523$5758 = False, DynamicChart`click$5526$5758 = 
       False, DynamicChart`click$5529$5758 = False, 
       DynamicChart`click$5532$5758 = False, DynamicChart`click$5538$5758 = 
       False, DynamicChart`click$5541$5758 = False, 
       DynamicChart`click$5544$5758 = False, DynamicChart`click$5547$5758 = 
       False, DynamicChart`click$5550$5758 = False, 
       DynamicChart`click$5553$5758 = False, DynamicChart`click$5556$5758 = 
       False, DynamicChart`click$5559$5758 = False, 
       DynamicChart`click$5562$5758 = False, DynamicChart`click$5565$5758 = 
       False, DynamicChart`click$5571$5758 = False, 
       DynamicChart`click$5574$5758 = False, DynamicChart`click$5577$5758 = 
       False, DynamicChart`click$5580$5758 = False, 
       DynamicChart`click$5583$5758 = False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{{{{
                 Directive[
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                  GrayLevel[0]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    PolygonBox[CompressedData["
1:eJwBUQKu/SFib1JlAgAAACQAAAACAAAArhp6PhfGxz90iCjC2fEDQPoc2YZ5
r6y/A5wS0bb+A0DO8836UgbTv8yieV6t2wNAIIbXp5Ek4b9OWsZZEYkDQKEs
snfonOi/UQyjqagHA0CKX/CuSNrvvxjy4lGpWAJAb5k/KK1l87/Zc9SMtn0B
QEpDZBa+r/a/2nHx3tx4AEDDiifcdcP5v2YVp1wamf4/RbJ2ZnWZ/L+IKF3T
Lff7P4Glon3xKv+/QienmUIS+T+cDfGF4bgAwN4PuqVH8fU/0llQ7Tq0AcA4
gDrQu5vyP1PTpdEqhQLA+vbPvjcz7j/akCeqvCkDwKQeNsme5uY/XH6iN2ag
A8AnR7VnUsbePy3R8TQL6APAfKQ4glvrzj8AAAAAAAAEwAlz2b+vD7Y8AAAA
AAAADMAMoWPZwuK+PNkk7BZ23gvAitlaDsCk1T8b5Em0KHoLwJt+mEjTiuU/
mZdqIQjUCsBsFdmM1QfwP6j0tFii7QnAfMbEONoj9T+MSj1MH8kIwOgZhSM6
Dfo/pqyEuztpB8DRrzcbMbj+Pw6nvqRC0QXASGhbOMiMAUBkFlNhBQUEwPk1
weBskwNAVRSCgNIIAsCUKKgNLGsFQM73JezWwv+//jiFnpsPB0A1PYxr8if7
v5YIw17MfAhA4EKorf9L9r+7H6RyU68JQArsL7qiOvG/pHcXh1KkCkDGuy0e
///nv21+4rB+WQtAISLtK3Si2r9RSqrqJc0LQEiUMatuFLS/OKezJDP+C0BG
rIh4Q6TQP24ln9ww7AtAWzEbOQ==
                    "]]}], 
                    StatusArea[#, 27.71]& , TagBoxNote -> "27.71"], 
                    StyleBox["27.71`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[27.71, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$5571$5758, 
                    FEPrivate`Not[DynamicChart`click$5571$5758]], 
                    PassEventsDown -> True, PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], 
                  Dynamic[
                   If[
                   DynamicChart`click$5571$5758, {{{1., 0}, {
                    0, 1.}}, {-0.13606666744282334`, 
                    0.14658056491569452`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {
                    DynamicChart`click$5571$5758}]]}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                  GrayLevel[1]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    PolygonBox[CompressedData["
1:eJwVjntYy2sAgH/bb12231G5hJBVh5TqRCK39X2J1GOpsy6uKR4ll1Qu6YZS
HRwkE01RVkcq2UkshL6vi2gUsVCipw01Fs1Wm2o6zh/v8/73Pq/1lmheOJ0g
iE2/+N9RxqY19q0kDjZYc+ZyThtK1o8kr99P4g8iaPHgoAxFm0+v7FDQ8RX6
Q85a+mcUUZznQcyh41Zxe3huUT8yHRks4/vQcIbjXqaHpQa1WIrKGxcSGO7n
F+WFa1F3muedWOInMmv4UJC/bwg99v1xsGXFMGJQArVkmR7ZnxB8CfDWoZCb
hcmwaRRdcT42Pth0AE2Nl0T1EDTc8TxNXl2oQvbZAX5H1DQccSyY32yuRBVr
dnGnV9Pxi9QJHv7CD2hJ9IJCKY/Egkwy+S9NO5ogiWY53yfxRtmZpILmBnQF
3fd3GCBxo3Df+WyaGMzWJjzh6EnsVimyutchBcVso0qelMRh3Py1Q1YykJDl
6duSSOLCkJSndiUKQNM/pJ1U0XG6efObxfH9IDrPfkHnIjrmNk4eIDVqwMw6
PyU1iIa/B4otPrlrQbrHjnVlXgRmYZ/Dz/yHwMld7ANd7J8ICRJHF9nogfPW
gLxzkcPIfsalDE75KDDb7unA3q1DmQW0Q/4aAprv0Egfuw2gVbK5jZpeGvR9
Xc/Y06xC8U6jhrdu0GF6Qes89W4l4tp6w0IuCW1r5j3k6T+gIzXD9zzvkHCH
dZL3kYoONDauqiJLTcLzYbWOX3wa0ZBg2WOtnoTdOWlTLxlVgu2jkrTQ1yQE
QRkWdyylYFvAmkTbFBJOlsR0WTZ0g5LbuhibH3S4/1a0RuqrAPVD71fne9Lh
jcS2vnpuP4jYvP578GYaNHY5e6ZMogYexae+xgUS8PnRlmzTyVqgqEqJtwE/
QaN9nvFbxyFwT1jaNv/EMAgdVys+TNMDq6h/ax+d1YHKXpw/5vQoKK9rT7IM
GwAVCz1ShD2/OgkjclOdCrCuElLf9zTI3Ukd6n+kBBGRN5Y4l9LhUOWDVLd1
H0HczNLkQC8SmpVMdlu76y1oPGmzd+ktEoqmJLpPanwE9h2zq2tXkdCr/Fi8
5z/Pwe6ZBZ1zlBSkOmdjjosceOuaFn89R8GHTkViX3kfeJN7t9t0hAUVOcKa
zJkaYMd36DOxYkGb5X+AiXY/gIml62lDBhN+j5OMH1TqQb249pOozAgOh2cb
Addfn8yjQcGTDOG2GSGyNytJOBZfDm/3ZUBmCq6e62gAi8mXvAs8Ojwldkwt
7jSEXvys1bGzCWgbtCpgfJAxXJbg6hIkHgbL+fnCd2eYMDu+waKrdRCkbzvN
0J/+9fGk50BSlQpsNFl5je5LwbqeSwYhXb0gzGUaj/2Igk/f9QXn2XcCh1eD
N2bpKdgu/VP9lnMXfHR/GpLzlYK9ASXuPq7PUC/HyYifR8F6vc2FWpEMtUY+
sZUzKLiVYz7h6pY+ZFr8hDniwILtNgmvPXvU6PnScu/+cUwY6TQuapdSh5zK
Iyti7htB/83Hsw7f0iPLiMCyBgdDeKLJO19mQcO81jaXuq0MWB1arcxzJrHR
5Zt7GnbSYZPA+bLfRANc9vXnWOEKArLrsuWBTYZYaH78wcJvw2DP+YITqcuN
sfV0dtMdEy3IbX+5yjWdiTM9sF3VgAoQzuYXQzJYeF2rWfKmzQpQOke38OgK
CmtCa50WubwDR0JjHDvqKDzFp+jFxcgHQGo71v/3EQoLmBe8utjNyO+3Ns6r
fgpL5JH9sx1kSDFlQYmJkMLW09JqX3UrEW8+d2LWGApf4y+92VmiRtrrOYwG
Nxbmr8lwL6jQoaUXTaKrrJk4wXRm7/skParz6H1q1mKEc7Nvq6JGCayVx/49
HhriIkV2jeckErN3fzbLTGLgqaXncv0IA3z1mzK6LZ2OrbKwSiY2xNe/cNHd
MAKLnHBQ8zxjfDRWWqyxG0Eb/GBdRBwTq7ZKamNXaVHL50G+IJGFr66O2fTa
9TsSOW8x/8ihMNgwq3+JXIEiroiKomooPE7oJbi++D36D+dB5BI=
                    
                    "]]}], StatusArea[#, 75.84]& , TagBoxNote -> "75.84"], 
                    StyleBox["75.84`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[75.84, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$5574$5758, 
                    FEPrivate`Not[DynamicChart`click$5574$5758]], 
                    PassEventsDown -> True, PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], 
                  Dynamic[
                   If[
                   DynamicChart`click$5574$5758, {{{1., 0}, {0, 1.}}, {
                    0.14566848739352617`, -0.13704266408853152`}}, {{1, 0}, {
                    0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {
                    DynamicChart`click$5574$5758}]]}, {}, {}, {}, {}, {}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                  RGBColor[0.5, 0, 0.5]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    PolygonBox[{{-2.4884456007881584`, \
-0.24008017810319582`}, {-2.477130398591774, -0.33737959092475955`}, \
{-3.467982558028484, -0.4723314272946634}, {-3.4838238411034217`, \
-0.33611224934447415`}}]}], StatusArea[#, 0.66]& , TagBoxNote -> "0.66"], 
                    StyleBox["0.66`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[0.66, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$5577$5758, 
                    FEPrivate`Not[DynamicChart`click$5577$5758]], 
                    PassEventsDown -> True, PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], 
                  Dynamic[
                   If[
                   DynamicChart`click$5577$5758, {{{1., 0}, {
                    0, 1.}}, {-0.1986611675445544, -0.023102824715486706`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$5577$5758}]]}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                  GrayLevel[0.5]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    PolygonBox[{{-2.499992950278897, -0.005937049420032676}, \
{-2.4884456007881584`, -0.24008017810319582`}, {-3.4838238411034217`, \
-0.33611224934447415`}, {-3.4999901303904557`, -0.008311869188045747}}]}], 
                    StatusArea[#, 1.58]& , TagBoxNote -> "1.58"], 
                    StyleBox["1.58`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[1.58, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$5580$5758, 
                    FEPrivate`Not[DynamicChart`click$5580$5758]], 
                    PassEventsDown -> True, PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], 
                  Dynamic[
                   If[
                   DynamicChart`click$5580$5758, {{{1., 0}, {
                    0, 1.}}, {-0.19975722137627577`, -0.009851523132468586}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$5580$5758}]]}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                  RGBColor[0, 1, 1]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    PolygonBox[{{-2.5, -3.061616997868383*^-16}, \
{-2.499992950278897, -0.005937049420032676}, {-3.4999901303904557`, \
-0.008311869188045747}, {-3.5, -4.286263797015736*^-16}}]}], 
                    StatusArea[#, 0.04]& , TagBoxNote -> "0.04"], 
                    StyleBox["0.04`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[0.04, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$5583$5758, 
                    FEPrivate`Not[DynamicChart`click$5583$5758]], 
                    PassEventsDown -> True, PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], 
                  Dynamic[
                   If[
                   DynamicChart`click$5583$5758, {{{1., 0}, {
                    0, 1.}}, {-0.19999985900552827`, \
-0.00023748214421966658`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {
                    DynamicChart`click$5583$5758}]]}}}}, {}}, {{{{{
                 Directive[
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                  GrayLevel[0]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    PolygonBox[CompressedData["
1:eJwBEQLu/SFib1JlAgAAACAAAAACAAAAmHM+sQeEx7+DiXcqZsjzP/SWR6LA
M9O/qQuaslJq8z80NjfUQ3nav4MLNvSH3/I/mfNSEefA4L+HeQqXRSnyP1M4
gleWHuS/ik0jXy9J8T80Zl8r703nv9eZE2ZJQfA/3h5TtJtH6r95EqLs5ifu
Pzu4YrfBBO2/Sb/EJseH6z+MfmZfEn/vv5bk8XY/qOg/JIYZYmzY8L/m0Kzh
7Y/lP/YCoIeDyvG/G6YQNvNF4j+1gcMPoZPyv/beGUbFo90/n9HlyPUx87+5
N26KYHfWP0naGAsVpPO/miF8VXsuzj+0xvf/9+jzv7BytxBlUb4/AAAAAAAA
9L8Jc9m/rw+mPAAAAAAAAALAiOd2+eraszzVMpKZResBwJ9N2FtBScs/Dl6W
I0atAcBxUYlm1SnbP3YJAmiQRgHAJjJjST045D8jW5b0ELgAwETisFj+rOo/
qgIQ+g8DAMB/laiwJ3LwP9pXlLBcUv6/Nu+Bse9n8z8XpUK8w1j8v1TnDOsF
MfY/nHJyi+Ed+r8orEoJAMf4P8ibF+/Ypve/bd2Rbukj+z/JqKJAV/n0v+oU
8OpQQv0/fv/BTocb8r8rJdlEVR3/P+AcYlIGKO6/+gYjO1hYAEA0F5jYidPn
v/ajMMJg/ABA3AfaXi1I4b8YpIptSnkBQG/OUewGKtW/kMiejPXNAUDp3Ab/

                    "]]}], StatusArea[#, 27.62]& , TagBoxNote -> "27.62"], 
                    StyleBox["27.62`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[27.62, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$5538$5758, 
                    FEPrivate`Not[DynamicChart`click$5538$5758]], 
                    PassEventsDown -> True, PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], 
                  Dynamic[
                   If[
                   DynamicChart`click$5538$5758, {{{1., 0}, {
                    0, 1.}}, {-0.15145780863663244`, 
                    0.13061597223536345`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {
                    DynamicChart`click$5538$5758}]]}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                  GrayLevel[1]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    PolygonBox[CompressedData["
1:eJwB8QMO/CFib1JlAgAAAD4AAAACAAAAGJCZFXk42z8LPrBdgM7yv4O/wko9
OuE/ySa3Ts4M8r+8+DyH3a3kP0oILca1HvG/EKmcqp/u5z+sw/dxgAbwv8H9
oD+D9Oo/TtIwLr+N7b/yuUugGLjtP2izV+TKxeq/kxpIoEkZ8D8GRMpS+7vn
v4wF5zPtLvE/euktxcl35L8q2vkXTBryP8Je/SM/AeG/MqyyUiPZ8j/7w7Vh
wMHav82Ar3OdafM/0B15JDE/078KzrkWV8rzP3RJ+YeTGse/Ht/7TWL68z84
tTdNv/etvxuyRetI+fM/lAEibENisD8Fo8GiDcfzP2hyAKAMzMc/0MxNBCxk
8z/ts+QDN5bTP4Z8ikuX0fI/BpZhhDkW2z8XXokJuBDyP1WjsHHNKeE/uCbd
rWgj8T/iF14MRp7kP6N4j/fwC/A/B/Ve6Abg5z9jemeyAJrtP9kp3x0N5+o/
PTzGu07T6j94rfo75qvtPzCDwj6gyuc/woMlTeET8D/33+m/a4fkP0lzBA1D
KvE/eF87ubcR4T/WlMWWaxbyP4vd6bgN5No/L46VABbW8j9YfKRHhmLTPxZ4
l9JqZ/M/UlPwkp9ixz9HNaKOBMnzPwapf6WxGq8/gBuhH/P58z9u0LkCnqGv
vznMJCi++fM/mHM+sQeEx7+DiXcqZsjzP2/OUewGKtW/kMiejPXNAUBjCHQC
23e8v2ZRVFde+gFAhn6Mrmz+uz/zy90CjvoBQGSxPgT2C9U/JmP4GYTOAUBP
1uCmRXLhP62Fu/CsdgFA/eA486Uz6D8qMyCa4PMAQKF4BOd9ue4/jp9+1GBH
AED6r4X54HnyP+g1O+Sr5f4/etx7OJBp9T9aIN2KlfD8Pzk2/6iTJPg/uDX7
NU+0+j/Ch8PTM6T6P3Vy4ppYNvg/wHI1V0vi/D8fdlUE03z1P7JFwQVW2f4/
GK9UPnKO8j9Ibsg7P0IAQJm/CjPY5O4/eNYv99TvAEAGB4tdzWDoP+/REjfB
cwFA76EaHcug4T8eeeF4v8wBQJEAminYatU/5bm+0/T5AUA9aXCPrH29P85I
/BLy+gFAs7xLkpL4ur9vOafHtM8BQCTCxmAey9S/UlqETqd4AUAMzjkHeVLh
v/qabcqf9gBAAMpWvsYU6L8mEZQV3koAQMndlA3Ym+6/laNsXRHu/j/wHnYx
z2vyv6T8tFNR+vw/Nj3pMGJc9b8o9BBdSb/6P3chgs1pGPi//H2qH3ZC+D9G
vfgPLJn6v5D+jBn2ifU/NGAkzYDY/L92eVCTepzyP7nbHcvg0P6/64teU24C
7z+1bz6tuT4AwOM0Ci2gf+g/PZ4eIQ3tAMDYtgX4
                    "]]}], 
                    StatusArea[#, 57.09]& , TagBoxNote -> "57.09"], 
                    StyleBox["57.09`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[57.09, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$5541$5758, 
                    FEPrivate`Not[DynamicChart`click$5541$5758]], 
                    PassEventsDown -> True, PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], 
                  Dynamic[
                   If[
                   DynamicChart`click$5541$5758, {{{1., 0}, {0, 1.}}, {
                    0.1939129664325157, 0.04896694241365351}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$5541$5758}]]}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                  RGBColor[0, 1, 0]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    PolygonBox[{{0.22723756117618887`, -1.22917170923785}, {
                    0.3273849075950488, -1.2063660813695738`}, {
                    0.4253218375145038, -1.1754153880791616`}, {
                    0.7655793075261069, -2.115747698542491}, {
                    0.5892928336710878, -2.1714589464652327`}, {
                    0.40902761011714, -2.21250907662813}}]}], 
                    StatusArea[#, 3.19]& , TagBoxNote -> "3.19"], 
                    StyleBox["3.19`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[3.19, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$5544$5758, 
                    FEPrivate`Not[DynamicChart`click$5544$5758]], 
                    PassEventsDown -> True, PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], 
                  Dynamic[
                   If[
                   DynamicChart`click$5544$5758, {{{1., 0}, {0, 1.}}, {
                    0.0523815852152078, -0.1930185730191318}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$5544$5758}]]}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                  RGBColor[1, 1, 0]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    PolygonBox[{{-0.19835779159876205`, -1.23416132920784}, \
{-0.09218907231077454, -1.2465958346418773`}, {
                    0.014653816894329881`, -1.2499141033088743`}, {
                    0.12138954413030423`, -1.244091869025691}, {
                    0.22723756117618887`, -1.22917170923785}, {
                    0.40902761011714, -2.21250907662813}, {
                    0.2185011794345476, -2.2393653642462437`}, {
                    0.026376870409793786`, -2.249845385955974}, \
{-0.1659403301593942, -2.243872502355379}, {-0.35704402487777165`, \
-2.2214903925741116`}}]}], StatusArea[#, 6.64]& , TagBoxNote -> "6.64"], 
                    StyleBox["6.64`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[6.64, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$5547$5758, 
                    FEPrivate`Not[DynamicChart`click$5547$5758]], 
                    PassEventsDown -> True, PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], 
                  Dynamic[
                   If[
                   DynamicChart`click$5547$5758, {{{1., 0}, {0, 1.}}, {
                    0.002344610703092781, -0.19998625652941993`}}, {{1, 0}, {
                    0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$5547$5758}]]}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                  RGBColor[1, 0, 0]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    PolygonBox[{{-0.3329762485339983, -1.204834767888205}, \
{-0.2660713764211758, -1.2213541757612085`}, {-0.19835779159876205`, \
-1.23416132920784}, {-0.35704402487777165`, -2.2214903925741116`}, \
{-0.47892847755811646`, -2.1984375163701753`}, {-0.599357247361197, \
-2.168702582198769}}]}], StatusArea[#, 2.14]& , TagBoxNote -> "2.14"], 
                    StyleBox["2.14`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[2.14, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$5550$5758, 
                    FEPrivate`Not[DynamicChart`click$5550$5758]], 
                    PassEventsDown -> True, PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], 
                  Dynamic[
                   If[
                   DynamicChart`click$5550$5758, {{{1., 0}, {
                    0, 1.}}, {-0.042571420227388135`, \
-0.19541666812179337`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$5550$5758}]]}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                  RGBColor[0, 0, 1]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    PolygonBox[{{-0.9117221155586129, -0.855139043665606}, \
{-0.829962890612465, -0.9346986681311799}, {-0.7412907760947915, \
-1.006473042498795}, {-0.6464443357928027, -1.069864346878333}, \
{-0.5462135604102705, -1.124344585269096}, {-0.4414332876124991, \
-1.1694599833203447`}, {-0.3329762485339983, -1.204834767888205}, \
{-0.599357247361197, -2.168702582198769}, {-0.7945799177024985, \
-2.1050279699766206`}, {-0.9831844087384868, -2.023820253484373}, \
{-1.1635998044270448`, -1.9257558243809996`}, {-1.3343233969706247`, \
-1.8116514764978313`}, {-1.4939332031024368`, -1.6824576026361238`}, \
{-1.6410998080055033`, -1.5392502785980908`}}]}], StatusArea[#, 10.63]& , 
                    TagBoxNote -> "10.63"], 
                    StyleBox["10.63`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[10.63, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$5553$5758, 
                    FEPrivate`Not[DynamicChart`click$5553$5758]], 
                    PassEventsDown -> True, PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], 
                  Dynamic[
                   If[
                   DynamicChart`click$5553$5758, {{{1., 0}, {
                    0, 1.}}, {-0.10343109372684843`, -0.17117829550053332`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$5553$5758}]]}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                  RGBColor[1, 0.5, 0]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    PolygonBox[{{-1.240845733920494, -0.15100286292422113`}, \
{-1.2221661659734504`, -0.2623163409888072}, {-1.1935218438207773`, \
-0.3714910608919842}, {-1.1551463147800036`, -0.47763688242238656`}, \
{-1.1073524681496953`, -0.5798883610513133}, {-1.0505299841120337`, \
-0.6774118042089097}, {-0.9851421565320864, -0.7694120686753687}, \
{-0.9117221155586129, -0.855139043665606}, {-1.6410998080055033`, \
-1.5392502785980908`}, {-1.7732558817577555`, -1.3849417236156638`}, \
{-1.8909539714016605`, -1.2193412475760375`}, {-1.9932344426694515`, \
-1.0437990498923637`}, {-2.079263366604007, -0.8597463883602958}, \
{-2.148339318877399, -0.6686839096055716}, {-2.1998990987522107`, \
-0.47216941377985294`}, {-2.233522321056889, -0.27180515326359805`}}]}], 
                    StatusArea[#, 12.27]& , TagBoxNote -> "12.27"], 
                    StyleBox["12.27`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[12.27, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$5556$5758, 
                    FEPrivate`Not[DynamicChart`click$5556$5758]], 
                    PassEventsDown -> True, PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], 
                  Dynamic[
                   If[
                   DynamicChart`click$5556$5758, {{{1., 0}, {
                    0, 1.}}, {-0.18118465467278702`, -0.0846883753008812}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$5556$5758}]]}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                  RGBColor[0.5, 0, 0.5]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    PolygonBox[{{-1.2452628458674013`, \
-0.10872186855559755`}, {-1.240845733920494, -0.15100286292422113`}, \
{-2.233522321056889, -0.27180515326359805`}, {-2.2414731225613225`, \
-0.1956993634000756}}]}], StatusArea[#, 0.66]& , TagBoxNote -> "0.66"], 
                    StyleBox["0.66`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[0.66, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$5559$5758, 
                    FEPrivate`Not[DynamicChart`click$5559$5758]], 
                    PassEventsDown -> True, PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], 
                  Dynamic[
                   If[
                   DynamicChart`click$5559$5758, {{{1., 0}, {
                    0, 1.}}, {-0.19891744704542794`, \
-0.020780983155986116`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$5559$5758}]]}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                  GrayLevel[0.5]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    PolygonBox[{{-1.2499973445481234`, \
-0.0025765524718807855`}, {-1.2452628458674013`, -0.10872186855559755`}, \
{-2.2414731225613225`, -0.1956993634000756}, {-2.249995220186622, \
-0.004637794449385414}}]}], StatusArea[#, 1.65]& , TagBoxNote -> "1.65"], 
                    StyleBox["1.65`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[1.65, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$5562$5758, 
                    FEPrivate`Not[DynamicChart`click$5562$5758]], 
                    PassEventsDown -> True, PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], 
                  Dynamic[
                   If[
                   DynamicChart`click$5562$5758, {{{1., 0}, {
                    0, 1.}}, {-0.1998013452767368, -0.008911926032356451}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$5562$5758}]]}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                  RGBColor[0, 1, 1]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    PolygonBox[{{-1.25, -1.5308084989341916`*^-16}, \
{-1.2499973445481234`, -0.0025765524718807855`}, {-2.249995220186622, \
-0.004637794449385414}, {-2.25, -2.755455298081545*^-16}}]}], 
                    StatusArea[#, 0.04]& , TagBoxNote -> "0.04"], 
                    StyleBox["0.04`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[0.04, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$5565$5758, 
                    FEPrivate`Not[DynamicChart`click$5565$5758]], 
                    PassEventsDown -> True, PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], 
                  Dynamic[
                   If[
                   DynamicChart`click$5565$5758, {{{1., 0}, {
                    0, 1.}}, {-0.19999989378189673`, \
-0.00020612430722113982`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {
                    DynamicChart`click$5565$5758}]]}}}}, {}}, {{{{{
                 Directive[
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                  GrayLevel[0]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.5861314633484698`, 
                    3.141592653589793}]}], StatusArea[#, 27.64]& , TagBoxNote -> 
                    "27.64"], 
                    StyleBox["27.64`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[27.64, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$5505$5758, 
                    FEPrivate`Not[DynamicChart`click$5505$5758]], 
                    PassEventsDown -> True, PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], 
                  Dynamic[
                   If[
                   DynamicChart`click$5505$5758, {{{1., 0}, {
                    0, 1.}}, {-0.14250154634312784`, 
                    0.14033285178395466`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {
                    DynamicChart`click$5505$5758}]]}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                  GrayLevel[1]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-2.1139978151742147`, 
                    1.5861314633484698`}]}], StatusArea[#, 65.75]& , 
                    TagBoxNote -> "65.75"], 
                    StyleBox["65.75`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[65.75, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$5508$5758, 
                    FEPrivate`Not[DynamicChart`click$5508$5758]], 
                    PassEventsDown -> True, PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], 
                  Dynamic[
                   If[
                   DynamicChart`click$5508$5758, {{{1., 0}, {0, 1.}}, {
                    0.193074272550364, -0.05217590707546702}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$5508$5758}]]}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                  RGBColor[0, 1, 0]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.2085410423668863`, -2.1139978151742147`}]}], 
                    StatusArea[#, 1.68]& , TagBoxNote -> "1.68"], 
                    StyleBox["1.68`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[1.68, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$5511$5758, 
                    FEPrivate`Not[DynamicChart`click$5511$5758]], 
                    PassEventsDown -> True, PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], 
                  Dynamic[
                   If[
                   DynamicChart`click$5511$5758, {{{1., 0}, {
                    0, 1.}}, {-0.1113508160622334, -0.1661354741236039}}, {{1,
                     0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$5511$5758}]]}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                  RGBColor[1, 1, 0]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.3700523888210325`, -2.2085410423668863`}]}], 
                    StatusArea[#, 2.87]& , TagBoxNote -> "2.87"], 
                    StyleBox["2.87`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[2.87, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$5514$5758, 
                    FEPrivate`Not[DynamicChart`click$5514$5758]], 
                    PassEventsDown -> True, PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], 
                  Dynamic[
                   If[
                   DynamicChart`click$5514$5758, {{{1., 0}, {
                    0, 1.}}, {-0.1316513029357144, -0.15055874081344053`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$5514$5758}]]}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                  RGBColor[1, 0, 0]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.439834294606099, -2.3700523888210325`}]}], 
                    StatusArea[#, 1.24]& , TagBoxNote -> "1.24"], 
                    StyleBox["1.24`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[1.24, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$5517$5758, 
                    FEPrivate`Not[DynamicChart`click$5517$5758]], 
                    PassEventsDown -> True, PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], 
                  Dynamic[
                   If[
                   DynamicChart`click$5517$5758, {{{1., 0}, {
                    0, 1.}}, {-0.1481447475138278, -0.13436195065592124`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$5517$5758}]]}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                  RGBColor[0, 0, 1]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.721212946965238, -2.439834294606099}]}], 
                    StatusArea[#, 5.]& , TagBoxNote -> "5."], 
                    StyleBox["5.`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[5., {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$5520$5758, 
                    FEPrivate`Not[DynamicChart`click$5520$5758]], 
                    PassEventsDown -> True, PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], 
                  Dynamic[
                   If[
                   DynamicChart`click$5520$5758, {{{1., 0}, {
                    0, 1.}}, {-0.1693373543032373, -0.10641832754549325`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$5520$5758}]]}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                  RGBColor[1, 0.5, 0]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.0115957161998708`, -2.721212946965238}]}], 
                    StatusArea[#, 5.16]& , TagBoxNote -> "5.16"], 
                    StyleBox["5.16`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[5.16, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$5523$5758, 
                    FEPrivate`Not[DynamicChart`click$5523$5758]], 
                    PassEventsDown -> True, PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], 
                  Dynamic[
                   If[
                   DynamicChart`click$5523$5758, {{{1., 0}, {
                    0, 1.}}, {-0.19247480845960452`, -0.05434563559696916}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$5523$5758}]]}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                  RGBColor[0.5, 0, 0.5]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.0487376983112764`, -3.0115957161998708`}]}], 
                    StatusArea[#, 0.66]& , TagBoxNote -> "0.66"], 
                    StyleBox["0.66`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[0.66, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$5526$5758, 
                    FEPrivate`Not[DynamicChart`click$5526$5758]], 
                    PassEventsDown -> True, PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], 
                  Dynamic[
                   If[
                   DynamicChart`click$5526$5758, {{{1., 0}, {
                    0, 1.}}, {-0.1987597099054779, -0.022239103360753396`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$5526$5758}]]}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                  GrayLevel[0.5]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.1393416243709193`, -3.0487376983112764`}]}], 
                    StatusArea[#, 1.61]& , TagBoxNote -> "1.61"], 
                    StyleBox["1.61`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[1.61, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$5529$5758, 
                    FEPrivate`Not[DynamicChart`click$5529$5758]], 
                    PassEventsDown -> True, PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], 
                  Dynamic[
                   If[
                   DynamicChart`click$5529$5758, {{{1., 0}, {
                    0, 1.}}, {-0.19977391390143462`, -0.009507014489427977}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$5529$5758}]]}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                  RGBColor[0, 1, 1]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -3.1393416243709193`}]}], 
                    StatusArea[#, 0.04]& , TagBoxNote -> "0.04"], 
                    StyleBox["0.04`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[0.04, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$5532$5758, 
                    FEPrivate`Not[DynamicChart`click$5532$5758]], 
                    PassEventsDown -> True, PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], 
                  Dynamic[
                   If[
                   DynamicChart`click$5532$5758, {{{1., 0}, {
                    0, 1.}}, {-0.19999987332169977`, \
-0.00022510287436130675`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {
                    DynamicChart`click$5532$5758}]]}}}}, {}}}}, {}}, {{}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}}}, {{{{{
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                
                TagBox[{{}, {}}, StatusArea[#, 27.64]& , TagBoxNote -> 
                 "27.64"], 
                StyleBox["27.64`", {
                  GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                 False]], Annotation[#, 
                Style[27.64, {
                  GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5505$5758, 
                  FEPrivate`Not[DynamicChart`click$5505$5758]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$5505$5758, {{{1., 0}, {
                 0, 1.}}, {-0.14250154634312784`, 0.14033285178395466`}}, {{1,
                0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$5505$5758}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                
                TagBox[{{}, {}}, StatusArea[#, 65.75]& , TagBoxNote -> 
                 "65.75"], 
                StyleBox["65.75`", {
                  GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                 False]], Annotation[#, 
                Style[65.75, {
                  GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5508$5758, 
                  FEPrivate`Not[DynamicChart`click$5508$5758]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$5508$5758, {{{1., 0}, {0, 1.}}, {
                0.193074272550364, -0.05217590707546702}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$5508$5758}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {}}, StatusArea[#, 1.68]& , TagBoxNote -> "1.68"], 
                StyleBox["1.68`", {
                  GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                 False]], Annotation[#, 
                Style[1.68, {
                  GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5511$5758, 
                  FEPrivate`Not[DynamicChart`click$5511$5758]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$5511$5758, {{{1., 0}, {
                 0, 1.}}, {-0.1113508160622334, -0.1661354741236039}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$5511$5758}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {}}, StatusArea[#, 2.87]& , TagBoxNote -> "2.87"], 
                StyleBox["2.87`", {
                  GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                 False]], Annotation[#, 
                Style[2.87, {
                  GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5514$5758, 
                  FEPrivate`Not[DynamicChart`click$5514$5758]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$5514$5758, {{{1., 0}, {
                 0, 1.}}, {-0.1316513029357144, -0.15055874081344053`}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$5514$5758}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {}}, StatusArea[#, 1.24]& , TagBoxNote -> "1.24"], 
                StyleBox["1.24`", {
                  GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                 False]], Annotation[#, 
                Style[1.24, {
                  GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5517$5758, 
                  FEPrivate`Not[DynamicChart`click$5517$5758]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$5517$5758, {{{1., 0}, {
                 0, 1.}}, {-0.1481447475138278, -0.13436195065592124`}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$5517$5758}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {}}, StatusArea[#, 5.]& , TagBoxNote -> "5."], 
                StyleBox["5.`", {
                  GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                 False]], Annotation[#, 
                Style[5., {
                  GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5520$5758, 
                  FEPrivate`Not[DynamicChart`click$5520$5758]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$5520$5758, {{{1., 0}, {
                 0, 1.}}, {-0.1693373543032373, -0.10641832754549325`}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$5520$5758}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {}}, StatusArea[#, 5.16]& , TagBoxNote -> "5.16"], 
                StyleBox["5.16`", {
                  GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                 False]], Annotation[#, 
                Style[5.16, {
                  GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5523$5758, 
                  FEPrivate`Not[DynamicChart`click$5523$5758]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$5523$5758, {{{1., 0}, {
                 0, 1.}}, {-0.19247480845960452`, -0.05434563559696916}}, {{1,
                0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$5523$5758}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {}}, StatusArea[#, 0.66]& , TagBoxNote -> "0.66"], 
                StyleBox["0.66`", {
                  GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                 False]], Annotation[#, 
                Style[0.66, {
                  GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5526$5758, 
                  FEPrivate`Not[DynamicChart`click$5526$5758]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$5526$5758, {{{1., 0}, {
                 0, 1.}}, {-0.1987597099054779, -0.022239103360753396`}}, {{1,
                0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$5526$5758}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {}}, StatusArea[#, 1.61]& , TagBoxNote -> "1.61"], 
                StyleBox["1.61`", {
                  GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                 False]], Annotation[#, 
                Style[1.61, {
                  GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5529$5758, 
                  FEPrivate`Not[DynamicChart`click$5529$5758]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$5529$5758, {{{1., 0}, {
                 0, 1.}}, {-0.19977391390143462`, -0.009507014489427977}}, {{
               1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$5529$5758}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {}}, StatusArea[#, 0.04]& , TagBoxNote -> "0.04"], 
                StyleBox["0.04`", {
                  GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                 False]], Annotation[#, 
                Style[0.04, {
                  GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5532$5758, 
                  FEPrivate`Not[DynamicChart`click$5532$5758]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$5532$5758, {{{1., 0}, {
                 0, 1.}}, {-0.19999987332169977`, -0.00022510287436130675`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$5532$5758}]]}, {}}, {{}, {
           
            InsetBox[
             FormBox[
              StyleBox["\"\\!\\(\\*SubscriptBox[\\(N\\), \\(cks\\)]\\)=40\"", {
                GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False], 
              TraditionalForm], {0.6666666666666666, 0.}]}}}, {{{
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                
                TagBox[{{}, {}}, StatusArea[#, 27.62]& , TagBoxNote -> 
                 "27.62"], 
                StyleBox["27.62`", {
                  GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                 False]], Annotation[#, 
                Style[27.62, {
                  GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5538$5758, 
                  FEPrivate`Not[DynamicChart`click$5538$5758]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$5538$5758, {{{1., 0}, {
                 0, 1.}}, {-0.15145780863663244`, 0.13061597223536345`}}, {{1,
                0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$5538$5758}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                
                TagBox[{{}, {}}, StatusArea[#, 57.09]& , TagBoxNote -> 
                 "57.09"], 
                StyleBox["57.09`", {
                  GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                 False]], Annotation[#, 
                Style[57.09, {
                  GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5541$5758, 
                  FEPrivate`Not[DynamicChart`click$5541$5758]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$5541$5758, {{{1., 0}, {0, 1.}}, {
                0.1939129664325157, 0.04896694241365351}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$5541$5758}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {}}, StatusArea[#, 3.19]& , TagBoxNote -> "3.19"], 
                StyleBox["3.19`", {
                  GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                 False]], Annotation[#, 
                Style[3.19, {
                  GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5544$5758, 
                  FEPrivate`Not[DynamicChart`click$5544$5758]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$5544$5758, {{{1., 0}, {0, 1.}}, {
                0.0523815852152078, -0.1930185730191318}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$5544$5758}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {}}, StatusArea[#, 6.64]& , TagBoxNote -> "6.64"], 
                StyleBox["6.64`", {
                  GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                 False]], Annotation[#, 
                Style[6.64, {
                  GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5547$5758, 
                  FEPrivate`Not[DynamicChart`click$5547$5758]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$5547$5758, {{{1., 0}, {0, 1.}}, {
                0.002344610703092781, -0.19998625652941993`}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$5547$5758}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {}}, StatusArea[#, 2.14]& , TagBoxNote -> "2.14"], 
                StyleBox["2.14`", {
                  GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                 False]], Annotation[#, 
                Style[2.14, {
                  GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5550$5758, 
                  FEPrivate`Not[DynamicChart`click$5550$5758]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$5550$5758, {{{1., 0}, {
                 0, 1.}}, {-0.042571420227388135`, -0.19541666812179337`}}, {{
               1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$5550$5758}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                
                TagBox[{{}, {}}, StatusArea[#, 10.63]& , TagBoxNote -> 
                 "10.63"], 
                StyleBox["10.63`", {
                  GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                 False]], Annotation[#, 
                Style[10.63, {
                  GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5553$5758, 
                  FEPrivate`Not[DynamicChart`click$5553$5758]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$5553$5758, {{{1., 0}, {
                 0, 1.}}, {-0.10343109372684843`, -0.17117829550053332`}}, {{
               1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$5553$5758}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                
                TagBox[{{}, {}}, StatusArea[#, 12.27]& , TagBoxNote -> 
                 "12.27"], 
                StyleBox["12.27`", {
                  GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                 False]], Annotation[#, 
                Style[12.27, {
                  GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5556$5758, 
                  FEPrivate`Not[DynamicChart`click$5556$5758]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$5556$5758, {{{1., 0}, {
                 0, 1.}}, {-0.18118465467278702`, -0.0846883753008812}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$5556$5758}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {}}, StatusArea[#, 0.66]& , TagBoxNote -> "0.66"], 
                StyleBox["0.66`", {
                  GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                 False]], Annotation[#, 
                Style[0.66, {
                  GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5559$5758, 
                  FEPrivate`Not[DynamicChart`click$5559$5758]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$5559$5758, {{{1., 0}, {
                 0, 1.}}, {-0.19891744704542794`, -0.020780983155986116`}}, {{
               1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$5559$5758}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {}}, StatusArea[#, 1.65]& , TagBoxNote -> "1.65"], 
                StyleBox["1.65`", {
                  GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                 False]], Annotation[#, 
                Style[1.65, {
                  GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5562$5758, 
                  FEPrivate`Not[DynamicChart`click$5562$5758]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$5562$5758, {{{1., 0}, {
                 0, 1.}}, {-0.1998013452767368, -0.008911926032356451}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$5562$5758}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {}}, StatusArea[#, 0.04]& , TagBoxNote -> "0.04"], 
                StyleBox["0.04`", {
                  GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                 False]], Annotation[#, 
                Style[0.04, {
                  GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5565$5758, 
                  FEPrivate`Not[DynamicChart`click$5565$5758]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$5565$5758, {{{1., 0}, {
                 0, 1.}}, {-0.19999989378189673`, -0.00020612430722113982`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$5565$5758}]]}, {}}, {{}, {
           
            InsetBox[
             FormBox[
              StyleBox["\"\\!\\(\\*SubscriptBox[\\(N\\), \\(cks\\)]\\)=32\"", {
                GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False], 
              TraditionalForm], {1.75, 0.}]}}}, {{{
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                
                TagBox[{{}, {}}, StatusArea[#, 27.71]& , TagBoxNote -> 
                 "27.71"], 
                StyleBox["27.71`", {
                  GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                 False]], Annotation[#, 
                Style[27.71, {
                  GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5571$5758, 
                  FEPrivate`Not[DynamicChart`click$5571$5758]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$5571$5758, {{{1., 0}, {
                 0, 1.}}, {-0.13606666744282334`, 0.14658056491569452`}}, {{1,
                0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$5571$5758}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                
                TagBox[{{}, {}}, StatusArea[#, 75.84]& , TagBoxNote -> 
                 "75.84"], 
                StyleBox["75.84`", {
                  GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                 False]], Annotation[#, 
                Style[75.84, {
                  GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5574$5758, 
                  FEPrivate`Not[DynamicChart`click$5574$5758]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$5574$5758, {{{1., 0}, {0, 1.}}, {
                0.14566848739352617`, -0.13704266408853152`}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {
               DynamicChart`click$5574$5758}]], {}, {}, {}, {}, {}, 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {}}, StatusArea[#, 0.66]& , TagBoxNote -> "0.66"], 
                StyleBox["0.66`", {
                  GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                 False]], Annotation[#, 
                Style[0.66, {
                  GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5577$5758, 
                  FEPrivate`Not[DynamicChart`click$5577$5758]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$5577$5758, {{{1., 0}, {
                 0, 1.}}, {-0.1986611675445544, -0.023102824715486706`}}, {{1,
                0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$5577$5758}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {}}, StatusArea[#, 1.58]& , TagBoxNote -> "1.58"], 
                StyleBox["1.58`", {
                  GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                 False]], Annotation[#, 
                Style[1.58, {
                  GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5580$5758, 
                  FEPrivate`Not[DynamicChart`click$5580$5758]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$5580$5758, {{{1., 0}, {
                 0, 1.}}, {-0.19975722137627577`, -0.009851523132468586}}, {{
               1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$5580$5758}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {}}, StatusArea[#, 0.04]& , TagBoxNote -> "0.04"], 
                StyleBox["0.04`", {
                  GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                 False]], Annotation[#, 
                Style[0.04, {
                  GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5583$5758, 
                  FEPrivate`Not[DynamicChart`click$5583$5758]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$5583$5758, {{{1., 0}, {
                 0, 1.}}, {-0.19999985900552827`, -0.00023748214421966658`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$5583$5758}]]}, {}}, {{}, {
           
            InsetBox[
             FormBox[
              StyleBox["\"Non-MPI\"", {
                GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False], 
              TraditionalForm], {3., 0.}]}}}}, {}}}, 
      DynamicModuleValues :> {}], {{{}, {}}, {{}, {}}, {{}, {}}}, {{{{}, {}, \
{}, {}}, {{}, {}, {}, {}}, {{}, {}, {}, {}}}, {}}}, {
    ContentSelectable -> False, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, LabelStyle -> {
       GrayLevel[0], FontFamily -> "Arial"}, 
     PlotRange -> {{-4.2, 4.2}, {-4.2, 4.2}}, PlotRangePadding -> 
     Scaled[0.02]}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Init.B.\"", "\"Int.S.\"", "\"Int.P.\"", "\"Coll.\"", "\"Move\"", 
       "\"Comm.\"", "\"Barr.\"", "\"New.\"", "\"End.\"", "\"Hier.\""}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    GrayLevel[0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    GrayLevel[1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0, 1, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[1, 1, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[1, 0.5, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.5, 0, 0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    GrayLevel[0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0, 1, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial", 
          GrayLevel[0]}, Background -> Automatic, StripOnInput -> False], 
        TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "GrayLevel[0]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "GrayLevel[1]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "GrayLevel[0]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "GrayLevel[1]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "GrayLevel[0]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "GrayLevel[1]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "GrayLevel[0]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "GrayLevel[0]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "GrayLevel[0]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "GrayLevel[1]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "GrayLevel[0]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "GrayLevel[0]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "GrayLevel[0]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "GrayLevel[0]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "GrayLevel[0]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "GrayLevel[0]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "GrayLevel[0]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "GrayLevel[0.5]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "GrayLevel[0]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 1, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", "}"}], ",", 
               RowBox[{"{", 
                 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                   ",", #7, ",", #8, ",", #9, ",", #10}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "GrayLevel[0]"], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 
                 RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}]}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"None", ",", "None", ",", "None"}], "}"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "None", ",", "None", ",", "None", ",", "None", ",", 
                    "None", ",", "None", ",", "None", ",", "None", ",", 
                    "None", ",", "None"}], "}"}]}], "}"}]}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.608377100208695*^9, 3.6083771215182457`*^9}, 
   3.6083772506578217`*^9, 3.6083772849865837`*^9, {3.60837735150451*^9, 
   3.608377399138249*^9}, {3.60837743690312*^9, 3.608377551094212*^9}, {
   3.6083776408660183`*^9, 3.608377645179309*^9}, {3.608377716393238*^9, 
   3.608377730269388*^9}, {3.608377760854328*^9, 3.60837777026504*^9}, {
   3.608377872148776*^9, 3.608377958675972*^9}, {3.608377995794475*^9, 
   3.6083780389409857`*^9}, 3.608378237378641*^9, {3.608378290406775*^9, 
   3.6083783063423567`*^9}, {3.608379448131732*^9, 3.608379452717084*^9}, {
   3.6083795215919456`*^9, 3.608379552154159*^9}, {3.60838881399341*^9, 
   3.6083888240223093`*^9}, 3.608389641787856*^9, 3.608389675353375*^9, 
   3.6083897238476973`*^9, 3.608389789355194*^9, 3.608389821764711*^9, {
   3.608389926819854*^9, 3.608389942643018*^9}, 3.608392174253113*^9, 
   3.6083922556692457`*^9, 3.608392428906158*^9, 3.608392493117856*^9, 
   3.608392541714542*^9, {3.608396990587016*^9, 3.6083969987931423`*^9}, {
   3.608399382544619*^9, 3.6083993882795877`*^9}, 3.623579647560774*^9, {
   3.6235796849011354`*^9, 3.6235797051994305`*^9}, {3.623579782735202*^9, 
   3.6235798154804955`*^9}, {3.6235802685106936`*^9, 
   3.6235803144475765`*^9}, {3.623580378769134*^9, 3.623580395435362*^9}, 
   3.623580445040451*^9, {3.623580563314081*^9, 3.6235805906077733`*^9}, {
   3.6235811426805468`*^9, 3.623581155486883*^9}, 3.6235812832910023`*^9, 
   3.6235813847176313`*^9, {3.6242366553728747`*^9, 3.624236694256262*^9}, 
   3.624238331051693*^9, 3.6242397845218334`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<C:\\\\Users\\\\lwang\\\\OneDrive\\\\Documents\\\\Datas\\\\NBPrf\\\\\
256k_b_avx\\\\kspie.eps\>\"", ",", 
   RowBox[{"pie", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<C:\\\\Users\\\\lwang\\\\OneDrive\\\\Documents\\\\Datas\\\\NBPrf\\\\\
256k_b_avx\\\\kspie_legend.eps\>\"", ",", 
   RowBox[{"pie", "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1", ",", "1"}], "]"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.623581390468844*^9, 3.623581422485433*^9}, {
  3.6235814902543235`*^9, 3.623581516513356*^9}}],

Cell[BoxData["\<\"C:\\\\Users\\\\lwang\\\\OneDrive\\\\Documents\\\\Datas\\\\\
NBPrf\\\\256k_b_avx\\\\kspie.eps\"\>"], "Output",
 CellChangeTimes->{3.6235814160119877`*^9, 3.62358151746651*^9, 
  3.624236968964904*^9, 3.624238338130804*^9, 3.6242397866017227`*^9}],

Cell[BoxData["\<\"C:\\\\Users\\\\lwang\\\\OneDrive\\\\Documents\\\\Datas\\\\\
NBPrf\\\\256k_b_avx\\\\kspie_legend.eps\"\>"], "Output",
 CellChangeTimes->{3.6235814160119877`*^9, 3.62358151746651*^9, 
  3.624236968964904*^9, 3.624238338130804*^9, 3.6242397867579737`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PieChart", "[", 
    RowBox[{
     RowBox[{"Data", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"3", ";;", "4"}], ",", "#"}], "]"}], "]"}], ",", 
     RowBox[{"ChartLabels", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"Data", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"2", ";;", "3"}], ",", "1"}], "]"}], "]"}], ",", 
          "\"\<RadialCenter\>\""}], "]"}], ",", "None"}], "}"}]}], ",", 
     RowBox[{"ChartLegends", "\[Rule]", 
      RowBox[{"Data", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "#"}], "]"}], "]"}]}], ",", 
     RowBox[{"ChartStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "Black", ",", "Red", ",", "Green", ",", "Yellow", ",", "White", ",", 
        "Blue", ",", "Orange", ",", "Purple", ",", "Gray", ",", "Cyan", ",", 
        "Magenta", ",", "Brown", ",", "Pink", ",", "LightRed", ",", 
        "LightBlue", ",", "LightYellow", ",", "LightBrown"}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], "&"}], "@", 
  RowBox[{"{", 
   RowBox[{
   "7", ",", "8", ",", "23", ",", "9", ",", "13", ",", "14", ",", "15", ",", 
    "19", ",", "25", ",", "12", ",", "17", ",", "26", ",", "38", ",", "39", 
    ",", "46", ",", "47"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.608399438391941*^9, 3.6083994562854137`*^9}, {
  3.608399518597815*^9, 3.608399548276744*^9}, {3.608461679190596*^9, 
  3.608461680918668*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}}, {{}, {}}}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$175836$176161 = False, 
       DynamicChart`click$175840$176161 = False, 
       DynamicChart`click$175844$176161 = False, 
       DynamicChart`click$175848$176161 = False, 
       DynamicChart`click$175852$176161 = False, 
       DynamicChart`click$175856$176161 = False, 
       DynamicChart`click$175860$176161 = False, 
       DynamicChart`click$175864$176161 = False, 
       DynamicChart`click$175868$176161 = False, 
       DynamicChart`click$175872$176161 = False, 
       DynamicChart`click$175876$176161 = False, 
       DynamicChart`click$175880$176161 = False, 
       DynamicChart`click$175884$176161 = False, 
       DynamicChart`click$175888$176161 = False, 
       DynamicChart`click$175892$176161 = False, 
       DynamicChart`click$175900$176161 = False, 
       DynamicChart`click$175904$176161 = False, 
       DynamicChart`click$175908$176161 = False, 
       DynamicChart`click$175912$176161 = False, 
       DynamicChart`click$175916$176161 = False, 
       DynamicChart`click$175920$176161 = False, 
       DynamicChart`click$175924$176161 = False, 
       DynamicChart`click$175928$176161 = False, 
       DynamicChart`click$175932$176161 = False, 
       DynamicChart`click$175936$176161 = False, 
       DynamicChart`click$175940$176161 = False, 
       DynamicChart`click$175944$176161 = False, 
       DynamicChart`click$175948$176161 = False, 
       DynamicChart`click$175952$176161 = False, 
       DynamicChart`click$175956$176161 = False, 
       DynamicChart`click$175960$176161 = False}, {{
        RGBColor[0.5, 0.5, 1.], 
        EdgeForm[
         GrayLevel[0.5]], {{{{{
             GrayLevel[0], 
             EdgeForm[
              GrayLevel[0.5]], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    PolygonBox[{{-1.1285250724381846`, 
                    0.5375231724106324}, {-1.1717925732463033`, 
                    0.43520359061571046`}, {-1.2058046950167545`, 
                    0.329446562397533}, {-1.230292793719828, 
                    0.22108740742308342`}, {-1.2450634506220528`, 
                    0.11098199820289499`}, {-1.25, 
                    1.5308084989341916`*^-16}, {-2.25, 
                    2.755455298081545*^-16}, {-2.241114211119695, 
                    0.199767596765211}, {-2.2145270286956906`, 
                    0.39795733336155015`}, {-2.170448451030158, 
                    0.5930038123155594}, {-2.109226631843346, 
                    0.7833664631082788}, {-2.031345130388732, 
                    0.9675417103391383}}]}, 
                   ImageSizeCache -> {{25.760693309010094`, 
                    92.23930669098989}, {-57.23930669098991, 
                    1.2393066909899062`}}], StatusArea[#, 1378.83]& , 
                  TagBoxNote -> "1378.83"], 
                 StyleBox["1378.83`", {
                   GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
                Annotation[#, 
                 Style[1378.83, {
                   GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$175900$176161, 
                   FEPrivate`Not[DynamicChart`click$175900$176161]], 
                 PassEventsDown -> True, PassEventsDown -> Automatic, 
                 PassEventsUp -> True}]], 
              Dynamic[
               If[
               DynamicChart`click$175900$176161, {{{1., 0}, {
                  0, 1.}}, {-0.19508049917665005`, 0.04408626589981344}}, {{1,
                 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$175900$176161}]]}, {
             RGBColor[1, 0, 0], 
             EdgeForm[
              GrayLevel[0.5]], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    PolygonBox[{{-0.7486371854873175, 
                    1.0010206613779895`}, {-0.8419066270364601, 
                    0.9239552106850691}, {-0.9272886711093996, 
                    0.8382336908238441}, {-1.0039834165088923`, 
                    0.7446591833685607}, {-1.0712723489462084`, 
                    0.6441083405633506}, {-1.1285250724381846`, 
                    0.5375231724106324}, {-2.031345130388732, 
                    0.9675417103391383}, {-1.928290228103175, 
                    1.1593950130140311`}, {-1.8071701497160062`, 
                    1.3403865300634095`}, {-1.6691196079969193`, 
                    1.5088206434829194`}, {-1.5154319286656277`, 
                    1.6631193792331254`}, {-1.3475469338771715`, 
                    1.8018371904803812`}}]}, 
                   ImageSizeCache -> {{37.760693309010094`, 
                    113.2393066909899}, {-101.23930669098989`, \
-26.760693309010094`}}], StatusArea[#, 1501.76]& , TagBoxNote -> "1501.76"], 
                 StyleBox["1501.76`", {
                   GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
                Annotation[#, 
                 Style[1501.76, {
                   GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$175904$176161, 
                   FEPrivate`Not[DynamicChart`click$175904$176161]], 
                 PassEventsDown -> True, PassEventsDown -> Automatic, 
                 PassEventsUp -> True}]], 
              Dynamic[
               If[
               DynamicChart`click$175904$176161, {{{1., 0}, {
                  0, 1.}}, {-0.15468301656968575`, 0.12677998416509728`}}, {{
                1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$175904$176161}]]}, {
             RGBColor[0, 1, 0], 
             EdgeForm[
              GrayLevel[0.5]], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    PolygonBox[{{-0.37314294021587363`, 
                    1.1930064317375046`}, {-0.4727909498872064, 
                    1.157138158434313}, {-0.5690450743225893, 
                    1.1129634780122835`}, {-0.6612143623693003, 
                    1.0607994942478807`}, {-0.7486371854873175, 
                    1.0010206613779895`}, {-1.3475469338771715`, 
                    1.8018371904803812`}, {-1.1901858522647406`, 
                    1.9094390896461853`}, {-1.0242811337806608`, 
                    2.0033342604221103`}, {-0.8510237097969715, 
                    2.082848685181763}, {-0.6716572923885725, 
                    2.1474115771275084`}}]}, 
                   ImageSizeCache -> {{74.7606933090101, 
                    133.2393066909899}, {-120.2393066909899, \
-51.760693309010094`}}], StatusArea[#, 1051.55]& , TagBoxNote -> "1051.55"], 
                 StyleBox["1051.55`", {
                   GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
                Annotation[#, 
                 Style[1051.55, {
                   GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$175908$176161, 
                   FEPrivate`Not[DynamicChart`click$175908$176161]], 
                 PassEventsDown -> True, PassEventsDown -> Automatic, 
                 PassEventsUp -> True}]], 
              Dynamic[
               If[
               DynamicChart`click$175908$176161, {{{1., 0}, {
                  0, 1.}}, {-0.0910472118916143, 0.17807415648196537`}}, {{1, 
                0}, {0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$175908$176161}]]}, {
             RGBColor[1, 1, 0], 
             EdgeForm[
              GrayLevel[0.5]], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    PolygonBox[{{0.40357992821560473`, 1.1830567364000288`}, {
                    0.2952872447268401, 1.214621522574679}, {
                    0.1845899987416225, 1.236295487480468}, {
                    0.07238961235288051, 
                    1.2479021371980255`}, {-0.04040025207836077, 
                    1.2493469572668774`}, {-0.1528611319945928, 
                    1.240618182329008}, {-0.264077243802065, 
                    1.221786891935703}, {-0.37314294021587363`, 
                    1.1930064317375046`}, {-0.6716572923885725, 
                    2.1474115771275084`}, {-0.475339038843717, 
                    2.199216405484265}, {-0.27515003759026707`, 
                    2.2331127281922143`}, {-0.07272045374104938, 
                    2.2488245230803794`}, {0.1303013022351844, 
                    2.246223846956446}, {0.3322619977349205, 
                    2.2253318774648423`}, {0.5315170405083122, 
                    2.186318740634422}, {0.726443870788088, 
                    2.129502125520052}}]}, 
                   ImageSizeCache -> {{110.7606933090101, 
                    192.2393066909899}, {-125.2393066909899, \
-61.760693309010094`}}], StatusArea[#, 1960.05]& , TagBoxNote -> "1960.05"], 
                 StyleBox["1960.05`", {
                   GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
                Annotation[#, 
                 Style[1960.05, {
                   GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$175912$176161, 
                   FEPrivate`Not[DynamicChart`click$175912$176161]], 
                 PassEventsDown -> True, PassEventsDown -> Automatic, 
                 PassEventsUp -> True}]], 
              Dynamic[
               If[
               DynamicChart`click$175912$176161, {{{1., 0}, {0, 1.}}, {
                 0.0025617577413072842`, 0.19998359282019829`}}, {{1, 0}, {0, 
                1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$175912$176161}]]}, {
             GrayLevel[1], 
             EdgeForm[
              GrayLevel[0.5]], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    PolygonBox[{{0.5799501440175613, 1.1073201120064649`}, {
                    0.4932209036683026, 1.148578747924853}, {
                    0.40357992821560473`, 1.1830567364000288`}, {
                    0.7264438707880886, 2.1295021255200517`}, {
                    0.8877976266029447, 2.0674417462647354`}, {
                    1.0439102592316103`, 1.9931762016116368`}}]}, 
                   ImageSizeCache -> {{167.7606933090101, 
                    209.2393066909899}, {-119.2393066909899, \
-57.760693309010094`}}], StatusArea[#, 476.78]& , TagBoxNote -> "476.78"], 
                 StyleBox["476.78`", {
                   GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
                Annotation[#, 
                 Style[476.78, {
                   GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$175916$176161, 
                   FEPrivate`Not[DynamicChart`click$175916$176161]], 
                 PassEventsDown -> True, PassEventsDown -> Automatic, 
                 PassEventsUp -> True}]], 
              Dynamic[
               If[
               DynamicChart`click$175916$176161, {{{1., 0}, {0, 1.}}, {
                 0.07891534458692842, 0.1837725996679765}}, {{1, 0}, {0, 
                1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$175916$176161}]]}, {
             RGBColor[0, 0, 1], 
             EdgeForm[
              GrayLevel[0.5]], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    PolygonBox[{{0.8042350087475278, 0.956925310933337}, {
                    0.7331585645834181, 1.012412227888414}, {
                    0.6582670406209583, 1.062630934629764}, {
                    0.5799501440175613, 1.1073201120064649`}, {
                    1.0439102592316103`, 1.9931762016116368`}, {
                    1.1848806731177248`, 1.912735682333575}, {
                    1.3196854162501526`, 1.8223420101991452`}, {
                    1.44762301574555, 1.7224655596800065`}}]}, 
                   ImageSizeCache -> {{176.7606933090101, 
                    230.2393066909899}, {-112.2393066909899, \
-49.760693309010094`}}], StatusArea[#, 671.42]& , TagBoxNote -> "671.42"], 
                 StyleBox["671.42`", {
                   GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
                Annotation[#, 
                 Style[671.42, {
                   GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$175920$176161, 
                   FEPrivate`Not[DynamicChart`click$175920$176161]], 
                 PassEventsDown -> True, PassEventsDown -> Automatic, 
                 PassEventsUp -> True}]], 
              Dynamic[
               If[
               DynamicChart`click$175920$176161, {{{1., 0}, {0, 1.}}, {
                 0.11138652366099272`, 0.16611153586286265`}}, {{1, 0}, {0, 
                1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$175920$176161}]]}, {
             RGBColor[1, 0.5, 0], 
             EdgeForm[
              GrayLevel[0.5]], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    PolygonBox[{{0.8680125626847668, 0.8994743970905585}, {
                    0.8042350087475278, 0.956925310933337}, {1.44762301574555,
                     1.7224655596800065`}, {1.5624226128325802`, 
                    1.6190539147630054`}}]}, 
                   ImageSizeCache -> {{188.7606933090101, 
                    236.2393066909899}, {-96.2393066909899, \
-45.760693309010094`}}], StatusArea[#, 213.05]& , TagBoxNote -> "213.05"], 
                 StyleBox["213.05`", {
                   GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
                Annotation[#, 
                 Style[213.05, {
                   GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$175924$176161, 
                   FEPrivate`Not[DynamicChart`click$175924$176161]], 
                 PassEventsDown -> True, PassEventsDown -> Automatic, 
                 PassEventsUp -> True}]], 
              Dynamic[
               If[
               DynamicChart`click$175924$176161, {{{1., 0}, {0, 1.}}, {
                 0.1338587326439351, 0.14859959520456137`}}, {{1, 0}, {0, 
                1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$175924$176161}]]}, {
             RGBColor[0.5, 0, 0.5], 
             EdgeForm[
              GrayLevel[0.5]], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    PolygonBox[{{1.086566756166873, 0.6179584811239337}, {
                    1.022788398418912, 0.7186124769718913}, {
                    0.9497156559544029, 0.8127362258661159}, {
                    0.8680125626847668, 0.8994743970905585}, {
                    1.5624226128325802`, 1.6190539147630054`}, {
                    1.7094881807179252`, 1.4629252065590088`}, {
                    1.8410191171540415`, 1.2935024585494044`}, {
                    1.9558201611003716`, 1.1123252660230807`}}]}, 
                   ImageSizeCache -> {{192.7606933090101, 
                    258.2393066909899}, {-91.2393066909899, \
-30.760693309010094`}}], StatusArea[#, 887.42]& , TagBoxNote -> "887.42"], 
                 StyleBox["887.42`", {
                   GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
                Annotation[#, 
                 Style[887.42, {
                   GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$175928$176161, 
                   FEPrivate`Not[DynamicChart`click$175928$176161]], 
                 PassEventsDown -> True, PassEventsDown -> Automatic, 
                 PassEventsUp -> True}]], 
              Dynamic[
               If[
               DynamicChart`click$175928$176161, {{{1., 0}, {0, 1.}}, {
                 0.1579798776983969, 0.1226472920304381}}, {{1, 0}, {0, 
                1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$175928$176161}]]}, {
             GrayLevel[0.5], 
             EdgeForm[
              GrayLevel[0.5]], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    PolygonBox[{{1.152504477471359, 0.48397668271154304`}, {
                    1.121538130383008, 0.5519530977329385}, {
                    1.086566756166873, 0.6179584811239337}, {
                    1.9558201611003716`, 1.1123252660230807`}, {
                    2.0187686346894145`, 0.9935155759192893}, {
                    2.0745080594484464`, 0.8711580288807775}}]}, 
                   ImageSizeCache -> {{203.7606933090101, 
                    
                    263.2393066909899}, {-64.2393066909899, \
-23.760693309010094`}}], StatusArea[#, 370.78]& , TagBoxNote -> "370.78"], 
                 StyleBox["370.78`", {
                   GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
                Annotation[#, 
                 Style[370.78, {
                   GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$175932$176161, 
                   FEPrivate`Not[DynamicChart`click$175932$176161]], 
                 PassEventsDown -> True, PassEventsDown -> Automatic, 
                 PassEventsUp -> True}]], 
              Dynamic[
               If[
               DynamicChart`click$175932$176161, {{{1., 0}, {0, 1.}}, {
                 0.1794461008612813, 0.08831249563727016}}, {{1, 0}, {0, 
                1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$175932$176161}]]}, {
             RGBColor[0, 1, 1], 
             EdgeForm[
              GrayLevel[0.5]], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    PolygonBox[{{1.1572684339479289`, 0.4724719798969119}, {
                    1.152504477471359, 0.48397668271154304`}, {
                    2.0745080594484464`, 0.8711580288807775}, {
                    2.083083181106272, 0.8504495638144415}}]}, 
                   ImageSizeCache -> {{207.7606933090101, 
                    264.2393066909899}, {-52.23930669098991, \
-23.760693309010094`}}], StatusArea[#, 30.9]& , TagBoxNote -> "30.9"], 
                 StyleBox["30.9`", {
                   GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
                Annotation[#, 
                 Style[30.9, {
                   GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$175936$176161, 
                   FEPrivate`Not[DynamicChart`click$175936$176161]], 
                 PassEventsDown -> True, PassEventsDown -> Automatic, 
                 PassEventsUp -> True}]], 
              Dynamic[
               If[
               DynamicChart`click$175936$176161, {{{1., 0}, {0, 1.}}, {
                 0.1847841250413152, 0.07651684215070303}}, {{1, 0}, {0, 
                1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$175936$176161}]]}, {
             RGBColor[1, 0, 1], 
             EdgeForm[
              GrayLevel[0.5]], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    PolygonBox[{{1.1624161423694428`, 0.4596615189016187}, {
                    1.1572684339479289`, 0.4724719798969119}, {
                    2.083083181106272, 0.8504495638144415}, {
                    2.092349056264997, 0.8273907340229136}}]}, 
                   ImageSizeCache -> {{207.7606933090101, 
                    264.2393066909899}, {-50.23930669098991, \
-22.760693309010094`}}], StatusArea[#, 34.26]& , TagBoxNote -> "34.26"], 
                 StyleBox["34.26`", {
                   GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
                Annotation[#, 
                 Style[34.26, {
                   GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$175940$176161, 
                   FEPrivate`Not[DynamicChart`click$175940$176161]], 
                 PassEventsDown -> True, PassEventsDown -> Automatic, 
                 PassEventsUp -> True}]], 
              Dynamic[
               If[
               DynamicChart`click$175940$176161, {{{1., 0}, {0, 1.}}, {
                 0.18557759591529344`, 0.07457181702426229}}, {{1, 0}, {0, 
                1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$175940$176161}]]}, {
             RGBColor[0.6, 0.4, 0.2], 
             EdgeForm[
              GrayLevel[0.5]], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    PolygonBox[CompressedData["
1:eJwBcQOO/CFib1JlAgAAADYAAAACAAAAhIgcpbq/57+cm7Hg5xfwv2K3KmZ9
cOS/5kxuDhkx8b8gQkEHpu3gv8jUMRLjHvK/6K2cjiOA2r/gdleX7d7yv7/S
8ZUT4tK/jQl5yFNv878T3NasrijGv10KdhepzvO/dO1O6hJVqb9x/NHV/Pvz
vxq+7qdEHLM/0nhWlNz287+pW0DKaVnJP2fj+kNVv/O/dvNt7Vhy1D9uYzgV
81Xzv7YGOyVeBNw/epscFsC78r9dq7jg06fhP1CqmJJB8vG/bFEJxeUg5T/3
Oqw9dPvwvw898yugZOg/XN07Wo6z779ed/ksxWrrP77t1mgrIO2/sY59WbIr
7j+cjulcQEPqv5zWfAE6UPA/smAvkAck57/zMQZka2HxPyJB6sBiyuO/ZG4D
nrtG8j+L1dErxz7gvwfsu8Dn/fI/C49JY1AU2b/Xpq1aIYXzP8DciHzBa9G/
wlwNBxPb8z8GkJ6pbi7Dv+mFq8vj/vM/BRivcGqnmr8MJ748OfDzP6HMUMP6
Gbk/B4coYTiv8z9T/l1xOE/MP2p0AFWFPPM/0CTYdf3k1T+XGz2rQZnyP4Jg
uiUYa90/CcyDgCG9AEAGivQh/HnqP5Q1TZkRUAFAHSHctn204z9TRnFXTLcB
QGv+Opl/etk/jIkRHc3xAUAQuMivYZfGPx6STTcA/wFAKPwD/xL9p79IoCVT
xN4BQHpOqJhjQ9G/W0mc0WqRAUD8JsN5j1vfv9O6Qvq2FwFAjs1bWUiS5r/A
STYO3HIAQJazeejMPe2/gfPXgPRI/z+hOjlHv8/xv3+14DU1Xf0/1aMqaKDT
9L9qAPG2Uyf7PyjNayDtove/nh56qOSs+D/HovR3jTb6v/C2J8Ep9PU/oq0C
HgCI/L94/CH+AQTzP/E2adVqkf6/1pp/lLDH7z8VZomd1CYAwNJS6IchN+k/
vFiz4CzcAMBMjnyi6WbiPxbz5V/0ZgHAdlKgz3jQ1j92mS69zMUBwAWrI5cK
M8E/VgaBhcb3AcDZ1RMGkcy2v8z8PI1j/AHA75L0AWrx079TCbcumNMBwN9w
Jjqr/uC/MiKgZ8t9AcBaafOZudnnv/zqAdXV+wDA3ENCQJF47r9NDGCQ/04A
wHcLwKg9ZfK/aYrG5vnx/r8UrpmUwV/1v+LkcpTU9/y/Yi3Vkg==
                    "]]},
                    ImageSizeCache -> {{74.7606933090101, 
                    273.2393066909899}, {-50.239306690989906`, 
                    121.2393066909899}}], StatusArea[#, 8012.3]& , TagBoxNote -> 
                  "8012.3"], 
                 StyleBox["8012.3`", {
                   GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
                Annotation[#, 
                 Style[8012.3, {
                   GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$175944$176161, 
                   FEPrivate`Not[DynamicChart`click$175944$176161]], 
                 PassEventsDown -> True, PassEventsDown -> Automatic, 
                 PassEventsUp -> True}]], 
              Dynamic[
               If[
               DynamicChart`click$175944$176161, {{{1., 0}, {0, 1.}}, {
                 0.12196534512941548`, -0.1585069543820162}}, {{1, 0}, {0, 
                1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$175944$176161}]]}, {
             RGBColor[1, 0.5, 0.5], 
             EdgeForm[
              GrayLevel[0.5]], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    PolygonBox[{{-1.0974750101583302`, -0.5983716253950995}, \
{-1.041200490668863, -0.6916657706081158}, {-0.9770157667600533, \
-0.7797051952515546}, {-0.9054084623729847, -0.861821046542371}, \
{-0.8269225922490016, -0.937389474246533}, {-0.7421544289429822, \
-1.005836370191651}, {-1.3358779720973681`, -1.8105054663449718`}, \
{-1.488460666048203, -1.6873010536437594`}, {-1.6297352322713725`, \
-1.551277883776268}, {-1.758628380168096, -1.4034693514527983`}, \
{-1.8741608832039536`, -1.2449983870946086`}, {-1.9754550182849941`, \
-1.0770689257111792`}}]}, 
                   ImageSizeCache -> {{40.760693309010094`, 
                    113.2393066909899}, {26.760693309010108`, 
                    98.2393066909899}}], StatusArea[#, 1352.26]& , TagBoxNote -> 
                  "1352.26"], 
                 StyleBox["1352.26`", {
                   GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
                Annotation[#, 
                 Style[1352.26, {
                   GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$175948$176161, 
                   FEPrivate`Not[DynamicChart`click$175948$176161]], 
                 PassEventsDown -> True, PassEventsDown -> Automatic, 
                 PassEventsUp -> True}]], 
              Dynamic[
               If[
               DynamicChart`click$175948$176161, {{{1., 0}, {
                  0, 1.}}, {-0.150737153831914, -0.1314469872406892}}, {{1, 
                0}, {0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$175948$176161}]]}, {
             RGBColor[1, 0.85, 0.85], 
             EdgeForm[
              GrayLevel[0.5]], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    PolygonBox[{{-1.2497353557438475`, -0.02572043164099669}, \
{-1.2415565028756892`, -0.1450429252569343}, {-1.2220111496739083`, \
-0.26303754498674264`}, {-1.1912782346428532`, -0.37862404528266175`}, \
{-1.1496391188709196`, -0.4907442270283937}, {-1.0974750101583302`, \
-0.5983716253950995}, {-1.9754550182849941`, -1.0770689257111792`}, \
{-2.0693504139676553`, -0.8833396086511086}, {-2.144300822357136, \
-0.6815232815087912}, {-2.199620069413035, -0.4734675809761367}, \
{-2.2348017051762405`, -0.2610772654624817}, {-2.2495236403389254`, \
-0.04629677695379404}}]}, 
                   ImageSizeCache -> {{26.760693309010094`, 
                    95.23930669098989}, {-4.239306690989913, 
                    59.239306690989906`}}], StatusArea[#, 1484.54]& , 
                  TagBoxNote -> "1484.54"], 
                 StyleBox["1484.54`", {
                   GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
                Annotation[#, 
                 Style[1484.54, {
                   GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$175952$176161, 
                   FEPrivate`Not[DynamicChart`click$175952$176161]], 
                 PassEventsDown -> True, PassEventsDown -> Automatic, 
                 PassEventsUp -> True}]], 
              Dynamic[
               If[
               DynamicChart`click$175952$176161, {{{1., 0}, {
                  0, 1.}}, {-0.1932844683507768, -0.051391772632957015`}}, {{
                1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$175952$176161}]]}, {
             RGBColor[0.87, 0.94, 1], 
             EdgeForm[
              GrayLevel[0.5]], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    PolygonBox[{{-1.2499984403750348`, -0.00197460375288741}, \
{-1.2497353557438475`, -0.02572043164099669}, {-2.2495236403389254`, \
-0.04629677695379404}, {-2.2499971926750626`, -0.003554286755197338}}]}, 
                   ImageSizeCache -> {{26.760693309010094`, 
                    87.2393066909899}, {-5.239306690989906, 
                    4.239306690989906}}], StatusArea[#, 58.93]& , TagBoxNote -> 
                  "58.93"], 
                 StyleBox["58.93`", {
                   GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
                Annotation[#, 
                 Style[58.93, {
                   GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$175956$176161, 
                   FEPrivate`Not[DynamicChart`click$175956$176161]], 
                 PassEventsDown -> True, PassEventsDown -> Automatic, 
                 PassEventsUp -> True}]], 
              Dynamic[
               If[
               DynamicChart`click$175956$176161, {{{1., 0}, {
                  0, 1.}}, {-0.19998772627620545`, -0.0022157027944980858`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$175956$176161}]]}, {
             RGBColor[1, 1, 0.85], 
             EdgeForm[
              GrayLevel[0.5]], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    PolygonBox[{{-1.25, -1.5308084989341916`*^-16}, \
{-1.2499984403750348`, -0.00197460375288741}, {-2.2499971926750626`, \
-0.003554286755197338}, {-2.25, -2.755455298081545*^-16}}]}, 
                   ImageSizeCache -> {{25.760693309010094`, 
                    86.2393066909899}, {-5.239306690989906, 
                    2.239306690989906}}], StatusArea[#, 4.9]& , TagBoxNote -> 
                  "4.9"], 
                 StyleBox["4.9`", {
                   GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
                Annotation[#, 
                 Style[4.9, {
                   GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$175960$176161, 
                   FEPrivate`Not[DynamicChart`click$175960$176161]], 
                 PassEventsDown -> True, PassEventsDown -> Automatic, 
                 PassEventsUp -> True}]], 
              Dynamic[
               If[
               DynamicChart`click$175960$176161, {{{1., 0}, {
                  0, 1.}}, {-0.19999993761499169`, \
-0.00015796834950528908`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$175960$176161}]]}}, 
           InsetBox[
            StyleBox[
            "\"Hydra\"", StripOnInput -> False, LineColor -> GrayLevel[0], 
             FrontFaceColor -> GrayLevel[0], BackFaceColor -> GrayLevel[0], 
             GraphicsColor -> GrayLevel[0], FontColor -> GrayLevel[0]], {1.75,
             0.}]}, {{{
             GrayLevel[0], 
             EdgeForm[
              GrayLevel[0.5]], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {2.5451322828374447`, 
                    3.141592653589793}]}, 
                   ImageSizeCache -> {{95.25245310429355, 
                    151.4142135623731}, {-33.3724834408588, \
-0.58578643762689}}], StatusArea[#, 776.81]& , TagBoxNote -> "776.81"], 
                 StyleBox["776.81`", {
                   GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
                Annotation[#, 
                 Style[776.81, {
                   GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$175836$176161, 
                   FEPrivate`Not[DynamicChart`click$175836$176161]], 
                 PassEventsDown -> True, PassEventsDown -> Automatic, 
                 PassEventsUp -> True}]], 
              Dynamic[
               If[
               DynamicChart`click$175836$176161, {{{1., 0}, {
                  0, 1.}}, {-0.1911716017325895, 0.05876579524686268}}, {{1, 
                0}, {0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$175836$176161}]]}, {
             RGBColor[1, 0, 0], 
             EdgeForm[
              GrayLevel[0.5]], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.8078666922905962`, 
                    2.5451322828374447`}]}, 
                   ImageSizeCache -> {{104.46156961361672`, 
                    151.4142135623731}, {-55.255823551464445`, \
-0.5857864376268935}}], StatusArea[#, 960.19]& , TagBoxNote -> "960.19"], 
                 StyleBox["960.19`", {
                   GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
                Annotation[#, 
                 Style[960.19, {
                   GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$175840$176161, 
                   FEPrivate`Not[DynamicChart`click$175840$176161]], 
                 PassEventsDown -> True, PassEventsDown -> Automatic, 
                 PassEventsUp -> True}]], 
              Dynamic[
               If[
               DynamicChart`click$175840$176161, {{{1., 0}, {
                  0, 1.}}, {-0.11386805736217316`, 0.1644203926298829}}, {{1, 
                0}, {0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$175840$176161}]]}, {
             RGBColor[0, 1, 0], 
             EdgeForm[
              GrayLevel[0.5]], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.4698282038265942`, 
                    1.8078666922905962`}]}, 
                   ImageSizeCache -> {{136.0601360280317, 
                    156.79003522089474`}, {-56.74754689570646, \
-0.5857864376268935}}], StatusArea[#, 440.25]& , TagBoxNote -> "440.25"], 
                 StyleBox["440.25`", {
                   GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
                Annotation[#, 
                 Style[440.25, {
                   GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$175844$176161, 
                   FEPrivate`Not[DynamicChart`click$175844$176161]], 
                 PassEventsDown -> True, PassEventsDown -> Automatic, 
                 PassEventsUp -> True}]], 
              Dynamic[
               If[
               DynamicChart`click$175844$176161, {{{1., 0}, {
                  0, 1.}}, {-0.013599721961902107`, 0.19953708317643357`}}, {{
                1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$175844$176161}]]}, {
             RGBColor[1, 1, 0], 
             EdgeForm[
              GrayLevel[0.5]], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.27260759739197526`, 
                    1.4698282038265942`}]}, 
                   ImageSizeCache -> {{148.5857864376269, 
                    204.74754689570642`}, {-56.47592278795513, 
                    13.773875081753673`}}], StatusArea[#, 2269.29]& , 
                  TagBoxNote -> "2269.29"], 
                 StyleBox["2269.29`", {
                   GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
                Annotation[#, 
                 Style[2269.29, {
                   GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$175848$176161, 
                   FEPrivate`Not[DynamicChart`click$175848$176161]], 
                 PassEventsDown -> True, PassEventsDown -> Automatic, 
                 PassEventsUp -> True}]], 
              Dynamic[
               If[
               DynamicChart`click$175848$176161, {{{1., 0}, {0, 1.}}, {
                 0.16522389990364617`, 0.11269899245614359`}}, {{1, 0}, {0, 
                1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$175848$176161}]]}, {
             GrayLevel[1], 
             EdgeForm[
              GrayLevel[0.5]], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-0.471514742052054, -0.27260759739197526`}]}, 
                   ImageSizeCache -> {{148.5857864376269, 
                    202.7780584875076}, {-3.4142135623731065`, 
                    23.640147497314032`}}], StatusArea[#, 259.05]& , 
                  TagBoxNote -> "259.05"], 
                 StyleBox["259.05`", {
                   GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
                Annotation[#, 
                 Style[259.05, {
                   GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$175852$176161, 
                   FEPrivate`Not[DynamicChart`click$175852$176161]], 
                 PassEventsDown -> True, PassEventsDown -> Automatic, 
                 PassEventsUp -> True}]], 
              Dynamic[
               If[
               DynamicChart`click$175852$176161, {{{1., 0}, {0, 1.}}, {
                 0.1863160029791511, -0.07270726947061733}}, {{1, 0}, {0, 
                1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$175852$176161}]]}, {
             RGBColor[0, 0, 1], 
             EdgeForm[
              GrayLevel[0.5]], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-0.6380961164353929, -0.471514742052054}]}, 
                   ImageSizeCache -> {{148.5857864376269, 
                    198.92788074797687`}, {-3.4142135623731065`, 
                    31.183134256013673`}}], StatusArea[#, 216.95]& , 
                  TagBoxNote -> "216.95"], 
                 StyleBox["216.95`", {
                   GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
                Annotation[#, 
                 Style[216.95, {
                   GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$175856$176161, 
                   FEPrivate`Not[DynamicChart`click$175856$176161]], 
                 PassEventsDown -> True, PassEventsDown -> Automatic, 
                 PassEventsUp -> True}]], 
              Dynamic[
               If[
               DynamicChart`click$175856$176161, {{{1., 0}, {0, 1.}}, {
                 0.17000059038758972`, -0.10535558489169404`}}, {{1, 0}, {0, 
                1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$175856$176161}]]}, {
             RGBColor[1, 0.5, 0], 
             EdgeForm[
              GrayLevel[0.5]], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-0.7013348442261824, -0.6380961164353929}]}, 
                   ImageSizeCache -> {{148.5857864376269, 
                    194.25321591310043`}, {-3.4142135623731136`, 
                    33.826909998413335`}}], StatusArea[#, 82.36]& , 
                  TagBoxNote -> "82.36"], 
                 StyleBox["82.36`", {
                   GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
                Annotation[#, 
                 Style[82.36, {
                   GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$175860$176161, 
                   FEPrivate`Not[DynamicChart`click$175860$176161]], 
                 PassEventsDown -> True, PassEventsDown -> Automatic, 
                 PassEventsUp -> True}]], 
              Dynamic[
               If[
               DynamicChart`click$175860$176161, {{{1., 0}, {0, 1.}}, {
                 0.15679966337606716`, -0.12415258984472305`}}, {{1, 0}, {0, 
                1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$175860$176161}]]}, {
             RGBColor[0.5, 0, 0.5], 
             EdgeForm[
              GrayLevel[0.5]], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.0152710540919214`, -0.7013348442261824}]}, 
                   ImageSizeCache -> {{148.5857864376269, 
                    192.15989760921894`}, {-3.4142135623731136`, 
                    44.727468714497626`}}], StatusArea[#, 408.86]& , 
                  TagBoxNote -> "408.86"], 
                 StyleBox["408.86`", {
                   GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
                Annotation[#, 
                 Style[408.86, {
                   GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$175864$176161, 
                   FEPrivate`Not[DynamicChart`click$175864$176161]], 
                 PassEventsDown -> True, PassEventsDown -> Automatic, 
                 PassEventsUp -> True}]], 
              Dynamic[
               If[
               DynamicChart`click$175864$176161, {{{1., 0}, {0, 1.}}, {
                 0.13074452508033693`, -0.15134685051733698`}}, {{1, 0}, {0, 
                1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$175864$176161}]]}, {
             GrayLevel[0.5], 
             EdgeForm[
              GrayLevel[0.5]], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.118782623949576, -1.0152710540919214`}]}, 
                   ImageSizeCache -> {{148.5857864376269, 
                    179.54166193514425`}, {-3.4142135623731136`, 
                    47.39124747999856}}], StatusArea[#, 134.81]& , TagBoxNote -> 
                  "134.81"], 
                 StyleBox["134.81`", {
                   GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
                Annotation[#, 
                 Style[134.81, {
                   GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$175868$176161, 
                   FEPrivate`Not[DynamicChart`click$175868$176161]], 
                 PassEventsDown -> True, PassEventsDown -> Automatic, 
                 PassEventsUp -> True}]], 
              Dynamic[
               If[
               DynamicChart`click$175868$176161, {{{1., 0}, {0, 1.}}, {
                 0.09654603228484449, -0.175153828533817}}, {{1, 0}, {0, 
                1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$175868$176161}]]}, {
             RGBColor[0, 1, 1], 
             EdgeForm[
              GrayLevel[0.5]], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.1334789480136331`, -1.118782623949576}]}, 
                   ImageSizeCache -> {{148.5857864376269, 
                    174.70903403627807`}, {-3.4142135623731136`, 
                    47.728402394121005`}}], StatusArea[#, 19.14]& , 
                  TagBoxNote -> "19.14"], 
                 StyleBox["19.14`", {
                   GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
                Annotation[#, 
                 Style[19.14, {
                   GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$175872$176161, 
                   FEPrivate`Not[DynamicChart`click$175872$176161]], 
                 PassEventsDown -> True, PassEventsDown -> Automatic, 
                 PassEventsUp -> True}]], 
              Dynamic[
               If[
               DynamicChart`click$175872$176161, {{{1., 0}, {0, 1.}}, {
                 0.08603119396026629, -0.18055091710033222`}}, {{1, 0}, {0, 
                1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$175872$176161}]]}, {}, {
             RGBColor[0.6, 0.4, 0.2], 
             EdgeForm[
              GrayLevel[0.5]], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.4262613580902004`, -1.1334789480136331`}]}, 
                   ImageSizeCache -> {{148.5857864376269, 
                    174.00145779390016`}, {-3.4142135623731136`, 
                    52.19143982260606}}], StatusArea[#, 381.31]& , TagBoxNote -> 
                  "381.31"], 
                 StyleBox["381.31`", {
                   GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
                Annotation[#, 
                 Style[381.31, {
                   GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$175876$176161, 
                   FEPrivate`Not[DynamicChart`click$175876$176161]], 
                 PassEventsDown -> True, PassEventsDown -> Automatic, 
                 PassEventsUp -> True}]], 
              Dynamic[
               If[
               DynamicChart`click$175876$176161, {{{1., 0}, {0, 1.}}, {
                 0.057367920530047536`, -0.19159572462364122`}}, {{1, 0}, {0, 
                1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$175876$176161}]]}, {
             RGBColor[1, 0.5, 0.5], 
             EdgeForm[
              GrayLevel[0.5]], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.2373310588270767`, -1.4262613580902004`}]}, 
                   ImageSizeCache -> {{115.6115938008463, 
                    159.09593424986392`}, {-3.4142135623731136`, 
                    52.747546895706456`}}], StatusArea[#, 1056.31]& , 
                  TagBoxNote -> "1056.31"], 
                 StyleBox["1056.31`", {
                   GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
                Annotation[#, 
                 Style[1056.31, {
                   GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$175880$176161, 
                   FEPrivate`Not[DynamicChart`click$175880$176161]], 
                 PassEventsDown -> True, PassEventsDown -> Automatic, 
                 PassEventsUp -> True}]], 
              Dynamic[
               If[
               DynamicChart`click$175880$176161, {{{1., 0}, {
                  0, 1.}}, {-0.05160933976809258, -0.1932264889933613}}, {{1, 
                0}, {0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$175880$176161}]]}, {
             RGBColor[1, 0.85, 0.85], 
             EdgeForm[
              GrayLevel[0.5]], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.101519448108961, -2.2373310588270767`}]}, 
                   ImageSizeCache -> {{95.29527035521807, 
                    151.4142135623731}, {-3.4142135623731136`, 
                    41.33255160668172}}], StatusArea[#, 1125.49]& , 
                  TagBoxNote -> "1125.49"], 
                 StyleBox["1125.49`", {
                   GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
                Annotation[#, 
                 Style[1125.49, {
                   GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$175884$176161, 
                   FEPrivate`Not[DynamicChart`click$175884$176161]], 
                 PassEventsDown -> True, PassEventsDown -> Automatic, 
                 PassEventsUp -> True}]], 
              Dynamic[
               If[
               DynamicChart`click$175884$176161, {{{1., 0}, {
                  0, 1.}}, {-0.17811692180972227`, -0.0909635210676746}}, {{1,
                 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$175884$176161}]]}, {
             RGBColor[0.87, 0.94, 1], 
             EdgeForm[
              GrayLevel[0.5]], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.138813098045807, -3.101519448108961}]}, 
                   ImageSizeCache -> {{95.25265912893482, 
                    151.4142135623731}, {-3.4142135623731074`, 
                    1.5508792159022855`}}], StatusArea[#, 48.57]& , 
                  TagBoxNote -> "48.57"], 
                 StyleBox["48.57`", {
                   GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
                Annotation[#, 
                 Style[48.57, {
                   GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$175888$176161, 
                   FEPrivate`Not[DynamicChart`click$175888$176161]], 
                 PassEventsDown -> True, PassEventsDown -> Automatic, 
                 PassEventsUp -> True}]], 
              Dynamic[
               If[
               DynamicChart`click$175888$176161, {{{1., 0}, {
                  0, 1.}}, {-0.1999540927781488, -0.004284948222263069}}, {{1,
                 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$175888$176161}]]}, {
             RGBColor[1, 1, 0.85], 
             EdgeForm[
              GrayLevel[0.5]], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -3.138813098045807}]}, 
                   ImageSizeCache -> {{95.25245310429355, 
                    151.4142135623731}, {-3.4142135623731074`, \
-0.4375436661666492}}], StatusArea[#, 3.62]& , TagBoxNote -> "3.62"], 
                 StyleBox["3.62`", {
                   GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
                Annotation[#, 
                 Style[3.62, {
                   GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$175892$176161, 
                   FEPrivate`Not[DynamicChart`click$175892$176161]], 
                 PassEventsDown -> True, PassEventsDown -> Automatic, 
                 PassEventsUp -> True}]], 
              Dynamic[
               If[
               DynamicChart`click$175892$176161, {{{1., 0}, {
                  0, 1.}}, {-0.19999980685180554`, \
-0.00027795546492095306`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$175892$176161}]]}}, 
           InsetBox[
            StyleBox[
            "\"Hydra\"", StripOnInput -> False, LineColor -> GrayLevel[0], 
             FrontFaceColor -> GrayLevel[0], BackFaceColor -> GrayLevel[0], 
             GraphicsColor -> GrayLevel[0], FontColor -> GrayLevel[0]], {
            0.6666666666666666, 
            0.}]}}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}}, {{{{{
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                
                TagBox[{{}, {}}, StatusArea[#, 776.81]& , TagBoxNote -> 
                 "776.81"], 
                StyleBox["776.81`", {
                  GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
               Annotation[#, 
                Style[776.81, {
                  GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$175836$176161, 
                  FEPrivate`Not[DynamicChart`click$175836$176161]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$175836$176161, {{{1., 0}, {
                 0, 1.}}, {-0.1911716017325895, 0.05876579524686268}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$175836$176161}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                
                TagBox[{{}, {}}, StatusArea[#, 960.19]& , TagBoxNote -> 
                 "960.19"], 
                StyleBox["960.19`", {
                  GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
               Annotation[#, 
                Style[960.19, {
                  GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$175840$176161, 
                  FEPrivate`Not[DynamicChart`click$175840$176161]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$175840$176161, {{{1., 0}, {
                 0, 1.}}, {-0.11386805736217316`, 0.1644203926298829}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$175840$176161}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                
                TagBox[{{}, {}}, StatusArea[#, 440.25]& , TagBoxNote -> 
                 "440.25"], 
                StyleBox["440.25`", {
                  GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
               Annotation[#, 
                Style[440.25, {
                  GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$175844$176161, 
                  FEPrivate`Not[DynamicChart`click$175844$176161]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$175844$176161, {{{1., 0}, {
                 0, 1.}}, {-0.013599721961902107`, 0.19953708317643357`}}, {{
               1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$175844$176161}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                
                TagBox[{{}, {}}, StatusArea[#, 2269.29]& , TagBoxNote -> 
                 "2269.29"], 
                StyleBox["2269.29`", {
                  GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
               Annotation[#, 
                Style[2269.29, {
                  GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$175848$176161, 
                  FEPrivate`Not[DynamicChart`click$175848$176161]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$175848$176161, {{{1., 0}, {0, 1.}}, {
                0.16522389990364617`, 0.11269899245614359`}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$175848$176161}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                
                TagBox[{{}, {}}, StatusArea[#, 259.05]& , TagBoxNote -> 
                 "259.05"], 
                StyleBox["259.05`", {
                  GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
               Annotation[#, 
                Style[259.05, {
                  GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$175852$176161, 
                  FEPrivate`Not[DynamicChart`click$175852$176161]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$175852$176161, {{{1., 0}, {0, 1.}}, {
                0.1863160029791511, -0.07270726947061733}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$175852$176161}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                
                TagBox[{{}, {}}, StatusArea[#, 216.95]& , TagBoxNote -> 
                 "216.95"], 
                StyleBox["216.95`", {
                  GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
               Annotation[#, 
                Style[216.95, {
                  GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$175856$176161, 
                  FEPrivate`Not[DynamicChart`click$175856$176161]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$175856$176161, {{{1., 0}, {0, 1.}}, {
                0.17000059038758972`, -0.10535558489169404`}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$175856$176161}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                
                TagBox[{{}, {}}, StatusArea[#, 82.36]& , TagBoxNote -> 
                 "82.36"], 
                StyleBox["82.36`", {
                  GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
               Annotation[#, 
                Style[82.36, {
                  GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$175860$176161, 
                  FEPrivate`Not[DynamicChart`click$175860$176161]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$175860$176161, {{{1., 0}, {0, 1.}}, {
                0.15679966337606716`, -0.12415258984472305`}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$175860$176161}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                
                TagBox[{{}, {}}, StatusArea[#, 408.86]& , TagBoxNote -> 
                 "408.86"], 
                StyleBox["408.86`", {
                  GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
               Annotation[#, 
                Style[408.86, {
                  GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$175864$176161, 
                  FEPrivate`Not[DynamicChart`click$175864$176161]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$175864$176161, {{{1., 0}, {0, 1.}}, {
                0.13074452508033693`, -0.15134685051733698`}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$175864$176161}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                
                TagBox[{{}, {}}, StatusArea[#, 134.81]& , TagBoxNote -> 
                 "134.81"], 
                StyleBox["134.81`", {
                  GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
               Annotation[#, 
                Style[134.81, {
                  GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$175868$176161, 
                  FEPrivate`Not[DynamicChart`click$175868$176161]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$175868$176161, {{{1., 0}, {0, 1.}}, {
                0.09654603228484449, -0.175153828533817}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$175868$176161}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                
                TagBox[{{}, {}}, StatusArea[#, 19.14]& , TagBoxNote -> 
                 "19.14"], 
                StyleBox["19.14`", {
                  GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
               Annotation[#, 
                Style[19.14, {
                  GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$175872$176161, 
                  FEPrivate`Not[DynamicChart`click$175872$176161]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$175872$176161, {{{1., 0}, {0, 1.}}, {
                0.08603119396026629, -0.18055091710033222`}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$175872$176161}]], {}, 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                
                TagBox[{{}, {}}, StatusArea[#, 381.31]& , TagBoxNote -> 
                 "381.31"], 
                StyleBox["381.31`", {
                  GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
               Annotation[#, 
                Style[381.31, {
                  GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$175876$176161, 
                  FEPrivate`Not[DynamicChart`click$175876$176161]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$175876$176161, {{{1., 0}, {0, 1.}}, {
                0.057367920530047536`, -0.19159572462364122`}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$175876$176161}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                
                TagBox[{{}, {}}, StatusArea[#, 1056.31]& , TagBoxNote -> 
                 "1056.31"], 
                StyleBox["1056.31`", {
                  GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
               Annotation[#, 
                Style[1056.31, {
                  GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$175880$176161, 
                  FEPrivate`Not[DynamicChart`click$175880$176161]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$175880$176161, {{{1., 0}, {
                 0, 1.}}, {-0.05160933976809258, -0.1932264889933613}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$175880$176161}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                
                TagBox[{{}, {}}, StatusArea[#, 1125.49]& , TagBoxNote -> 
                 "1125.49"], 
                StyleBox["1125.49`", {
                  GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
               Annotation[#, 
                Style[1125.49, {
                  GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$175884$176161, 
                  FEPrivate`Not[DynamicChart`click$175884$176161]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$175884$176161, {{{1., 0}, {
                 0, 1.}}, {-0.17811692180972227`, -0.0909635210676746}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$175884$176161}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                
                TagBox[{{}, {}}, StatusArea[#, 48.57]& , TagBoxNote -> 
                 "48.57"], 
                StyleBox["48.57`", {
                  GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
               Annotation[#, 
                Style[48.57, {
                  GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$175888$176161, 
                  FEPrivate`Not[DynamicChart`click$175888$176161]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$175888$176161, {{{1., 0}, {
                 0, 1.}}, {-0.1999540927781488, -0.004284948222263069}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$175888$176161}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {}}, StatusArea[#, 3.62]& , TagBoxNote -> "3.62"], 
                StyleBox["3.62`", {
                  GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
               Annotation[#, 
                Style[3.62, {
                  GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$175892$176161, 
                  FEPrivate`Not[DynamicChart`click$175892$176161]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$175892$176161, {{{1., 0}, {
                 0, 1.}}, {-0.19999980685180554`, -0.00027795546492095306`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {
               DynamicChart`click$175892$176161}]]}, {}}, {{}, {}}}, {{{
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                
                TagBox[{{}, {}}, StatusArea[#, 1378.83]& , TagBoxNote -> 
                 "1378.83"], 
                StyleBox["1378.83`", {
                  GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
               Annotation[#, 
                Style[1378.83, {
                  GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$175900$176161, 
                  FEPrivate`Not[DynamicChart`click$175900$176161]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$175900$176161, {{{1., 0}, {
                 0, 1.}}, {-0.19508049917665005`, 0.04408626589981344}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$175900$176161}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                
                TagBox[{{}, {}}, StatusArea[#, 1501.76]& , TagBoxNote -> 
                 "1501.76"], 
                StyleBox["1501.76`", {
                  GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
               Annotation[#, 
                Style[1501.76, {
                  GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$175904$176161, 
                  FEPrivate`Not[DynamicChart`click$175904$176161]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$175904$176161, {{{1., 0}, {
                 0, 1.}}, {-0.15468301656968575`, 0.12677998416509728`}}, {{1,
                0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$175904$176161}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                
                TagBox[{{}, {}}, StatusArea[#, 1051.55]& , TagBoxNote -> 
                 "1051.55"], 
                StyleBox["1051.55`", {
                  GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
               Annotation[#, 
                Style[1051.55, {
                  GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$175908$176161, 
                  FEPrivate`Not[DynamicChart`click$175908$176161]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$175908$176161, {{{1., 0}, {
                 0, 1.}}, {-0.0910472118916143, 0.17807415648196537`}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$175908$176161}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                
                TagBox[{{}, {}}, StatusArea[#, 1960.05]& , TagBoxNote -> 
                 "1960.05"], 
                StyleBox["1960.05`", {
                  GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
               Annotation[#, 
                Style[1960.05, {
                  GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$175912$176161, 
                  FEPrivate`Not[DynamicChart`click$175912$176161]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$175912$176161, {{{1., 0}, {0, 1.}}, {
                0.0025617577413072842`, 0.19998359282019829`}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$175912$176161}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                
                TagBox[{{}, {}}, StatusArea[#, 476.78]& , TagBoxNote -> 
                 "476.78"], 
                StyleBox["476.78`", {
                  GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
               Annotation[#, 
                Style[476.78, {
                  GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$175916$176161, 
                  FEPrivate`Not[DynamicChart`click$175916$176161]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$175916$176161, {{{1., 0}, {0, 1.}}, {
                0.07891534458692842, 0.1837725996679765}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$175916$176161}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                
                TagBox[{{}, {}}, StatusArea[#, 671.42]& , TagBoxNote -> 
                 "671.42"], 
                StyleBox["671.42`", {
                  GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
               Annotation[#, 
                Style[671.42, {
                  GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$175920$176161, 
                  FEPrivate`Not[DynamicChart`click$175920$176161]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$175920$176161, {{{1., 0}, {0, 1.}}, {
                0.11138652366099272`, 0.16611153586286265`}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$175920$176161}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                
                TagBox[{{}, {}}, StatusArea[#, 213.05]& , TagBoxNote -> 
                 "213.05"], 
                StyleBox["213.05`", {
                  GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
               Annotation[#, 
                Style[213.05, {
                  GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$175924$176161, 
                  FEPrivate`Not[DynamicChart`click$175924$176161]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$175924$176161, {{{1., 0}, {0, 1.}}, {
                0.1338587326439351, 0.14859959520456137`}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$175924$176161}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {}}, StatusArea[#, 887.42]& , TagBoxNote -> 
                 "887.42"], 
                StyleBox["887.42`", {
                  GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
               Annotation[#, 
                Style[887.42, {
                  GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$175928$176161, 
                  FEPrivate`Not[DynamicChart`click$175928$176161]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$175928$176161, {{{1., 0}, {0, 1.}}, {
                0.1579798776983969, 0.1226472920304381}}, {{1, 0}, {0, 1}}, {{
               1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$175928$176161}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                
                TagBox[{{}, {}}, StatusArea[#, 370.78]& , TagBoxNote -> 
                 "370.78"], 
                StyleBox["370.78`", {
                  GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
               Annotation[#, 
                Style[370.78, {
                  GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$175932$176161, 
                  FEPrivate`Not[DynamicChart`click$175932$176161]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$175932$176161, {{{1., 0}, {0, 1.}}, {
                0.1794461008612813, 0.08831249563727016}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$175932$176161}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {}}, StatusArea[#, 30.9]& , TagBoxNote -> "30.9"], 
                StyleBox["30.9`", {
                  GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
               Annotation[#, 
                Style[30.9, {
                  GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$175936$176161, 
                  FEPrivate`Not[DynamicChart`click$175936$176161]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$175936$176161, {{{1., 0}, {0, 1.}}, {
                0.1847841250413152, 0.07651684215070303}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$175936$176161}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                
                TagBox[{{}, {}}, StatusArea[#, 34.26]& , TagBoxNote -> 
                 "34.26"], 
                StyleBox["34.26`", {
                  GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
               Annotation[#, 
                Style[34.26, {
                  GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$175940$176161, 
                  FEPrivate`Not[DynamicChart`click$175940$176161]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$175940$176161, {{{1., 0}, {0, 1.}}, {
                0.18557759591529344`, 0.07457181702426229}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$175940$176161}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                
                TagBox[{{}, {}}, StatusArea[#, 8012.3]& , TagBoxNote -> 
                 "8012.3"], 
                StyleBox["8012.3`", {
                  GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
               Annotation[#, 
                Style[8012.3, {
                  GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$175944$176161, 
                  FEPrivate`Not[DynamicChart`click$175944$176161]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$175944$176161, {{{1., 0}, {0, 1.}}, {
                0.12196534512941548`, -0.1585069543820162}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$175944$176161}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                
                TagBox[{{}, {}}, StatusArea[#, 1352.26]& , TagBoxNote -> 
                 "1352.26"], 
                StyleBox["1352.26`", {
                  GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
               Annotation[#, 
                Style[1352.26, {
                  GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$175948$176161, 
                  FEPrivate`Not[DynamicChart`click$175948$176161]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$175948$176161, {{{1., 0}, {
                 0, 1.}}, {-0.150737153831914, -0.1314469872406892}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$175948$176161}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                
                TagBox[{{}, {}}, StatusArea[#, 1484.54]& , TagBoxNote -> 
                 "1484.54"], 
                StyleBox["1484.54`", {
                  GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
               Annotation[#, 
                Style[1484.54, {
                  GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$175952$176161, 
                  FEPrivate`Not[DynamicChart`click$175952$176161]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$175952$176161, {{{1., 0}, {
                 0, 1.}}, {-0.1932844683507768, -0.051391772632957015`}}, {{1,
                0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$175952$176161}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                
                TagBox[{{}, {}}, StatusArea[#, 58.93]& , TagBoxNote -> 
                 "58.93"], 
                StyleBox["58.93`", {
                  GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
               Annotation[#, 
                Style[58.93, {
                  GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$175956$176161, 
                  FEPrivate`Not[DynamicChart`click$175956$176161]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$175956$176161, {{{1., 0}, {
                 0, 1.}}, {-0.19998772627620545`, -0.0022157027944980858`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$175956$176161}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {}}, StatusArea[#, 4.9]& , TagBoxNote -> "4.9"], 
                StyleBox["4.9`", {
                  GrayLevel[0], "GraphicsLabel"}, StripOnInput -> False]], 
               Annotation[#, 
                Style[4.9, {
                  GrayLevel[0], "GraphicsLabel"}], "Tooltip"]& ], 
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$175960$176161, 
                  FEPrivate`Not[DynamicChart`click$175960$176161]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$175960$176161, {{{1., 0}, {
                 0, 1.}}, {-0.19999993761499169`, -0.00015796834950528908`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {
               DynamicChart`click$175960$176161}]]}, {}}, {{}, {}}}}, {}}}, 
      DynamicModuleValues :> {}], {}, {{{{}, {}, {}, {}}, {{}, {}, {}, {}}}, \
{}}}, ContentSelectable -> False, ImageSize -> 300, 
    PlotRange -> {{-2.6999999999999997`, 
     2.6999999999999997`}, {-2.6999999999999997`, 2.6999999999999997`}}, 
    PlotRangePadding -> Scaled[0.02]],
   TemplateBox[{
    "\"Reg.Int.\"", "\"Irr.Int.\"", "\"Predict\"", "\"Init.B.List\"", 
     "\"Move\"", "\"Irr.Comm.\"", "\"Reg.Comm.\"", "\"GPU.Send\"", 
     "\"Irr.Send\"", "\"Mdot\"", "\"Energy\"", "\"Barrier\"", "\"KS.B.List\"",
      "\"KS.Int.S\"", "\"KS.Init\"", "\"KS.Term\""}, "SwatchLegend", 
    DisplayFunction -> (StyleBox[
      StyleBox[
       PaneBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{
                  Directive[
                   EdgeForm[
                    GrayLevel[0.5]], 
                   GrayLevel[0]], 
                  RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                 AspectRatio -> Full, ImageSize -> {10, 10}, PlotRangePadding -> 
                 None, ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                GraphicsBox[{
                  Directive[
                   EdgeForm[
                    GrayLevel[0.5]], 
                   RGBColor[1, 0, 0]], 
                  RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                 AspectRatio -> Full, ImageSize -> {10, 10}, PlotRangePadding -> 
                 None, ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                GraphicsBox[{
                  Directive[
                   EdgeForm[
                    GrayLevel[0.5]], 
                   RGBColor[0, 1, 0]], 
                  RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                 AspectRatio -> Full, ImageSize -> {10, 10}, PlotRangePadding -> 
                 None, ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                GraphicsBox[{
                  Directive[
                   EdgeForm[
                    GrayLevel[0.5]], 
                   RGBColor[1, 1, 0]], 
                  RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                 AspectRatio -> Full, ImageSize -> {10, 10}, PlotRangePadding -> 
                 None, ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                GraphicsBox[{
                  Directive[
                   EdgeForm[
                    GrayLevel[0.5]], 
                   GrayLevel[1]], 
                  RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                 AspectRatio -> Full, ImageSize -> {10, 10}, PlotRangePadding -> 
                 None, ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                GraphicsBox[{
                  Directive[
                   EdgeForm[
                    GrayLevel[0.5]], 
                   RGBColor[0, 0, 1]], 
                  RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                 AspectRatio -> Full, ImageSize -> {10, 10}, PlotRangePadding -> 
                 None, ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                GraphicsBox[{
                  Directive[
                   EdgeForm[
                    GrayLevel[0.5]], 
                   RGBColor[1, 0.5, 0]], 
                  RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                 AspectRatio -> Full, ImageSize -> {10, 10}, PlotRangePadding -> 
                 None, ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                GraphicsBox[{
                  Directive[
                   EdgeForm[
                    GrayLevel[0.5]], 
                   RGBColor[0.5, 0, 0.5]], 
                  RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                 AspectRatio -> Full, ImageSize -> {10, 10}, PlotRangePadding -> 
                 None, ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
              GridBoxAlignment -> {
               "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], 
             "Grid"], 
            TagBox[
             GridBox[{{
                GraphicsBox[{
                  Directive[
                   EdgeForm[
                    GrayLevel[0.5]], 
                   GrayLevel[0.5]], 
                  RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                 AspectRatio -> Full, ImageSize -> {10, 10}, PlotRangePadding -> 
                 None, ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                GraphicsBox[{
                  Directive[
                   EdgeForm[
                    GrayLevel[0.5]], 
                   RGBColor[0, 1, 1]], 
                  RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                 AspectRatio -> Full, ImageSize -> {10, 10}, PlotRangePadding -> 
                 None, ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}, {
                GraphicsBox[{
                  Directive[
                   EdgeForm[
                    GrayLevel[0.5]], 
                   RGBColor[1, 0, 1]], 
                  RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                 AspectRatio -> Full, ImageSize -> {10, 10}, PlotRangePadding -> 
                 None, ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}, {
                GraphicsBox[{
                  Directive[
                   EdgeForm[
                    GrayLevel[0.5]], 
                   RGBColor[0.6, 0.4, 0.2]], 
                  RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                 AspectRatio -> Full, ImageSize -> {10, 10}, PlotRangePadding -> 
                 None, ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #12}, {
                GraphicsBox[{
                  Directive[
                   EdgeForm[
                    GrayLevel[0.5]], 
                   RGBColor[1, 0.5, 0.5]], 
                  RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                 AspectRatio -> Full, ImageSize -> {10, 10}, PlotRangePadding -> 
                 None, ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #13}, {
                GraphicsBox[{
                  Directive[
                   EdgeForm[
                    GrayLevel[0.5]], 
                   RGBColor[1, 0.85, 0.85]], 
                  RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                 AspectRatio -> Full, ImageSize -> {10, 10}, PlotRangePadding -> 
                 None, ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #14}, {
                GraphicsBox[{
                  Directive[
                   EdgeForm[
                    GrayLevel[0.5]], 
                   RGBColor[0.87, 0.94, 1]], 
                  RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                 AspectRatio -> Full, ImageSize -> {10, 10}, PlotRangePadding -> 
                 None, ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #15}, {
                GraphicsBox[{
                  Directive[
                   EdgeForm[
                    GrayLevel[0.5]], 
                   RGBColor[1, 1, 0.85]], 
                  RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                 AspectRatio -> Full, ImageSize -> {10, 10}, PlotRangePadding -> 
                 None, ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #16}}, 
              GridBoxAlignment -> {
               "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], 
             "Grid"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
        Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
      Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
    InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], "]"}], ",", 
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0.5`", ",", "1.`"}], "]"}]}], "]"}],
                  ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], "]"}], ",", 
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0.5`", ",", "1.`"}], "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], "]"}], ",", 
                    RowBox[{"GrayLevel", "[", "0", "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], "]"}], ",", 
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], "]"}], ",", 
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], "]"}], ",", 
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "1", ",", "0"}], "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], "]"}], ",", 
                    RowBox[{"GrayLevel", "[", "1", "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], "]"}], ",", 
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], "]"}], ",", 
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], "]"}], ",", 
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], "]"}], ",", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], "]"}], ",", 
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "1"}], "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], "]"}], ",", 
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "1"}], "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], "]"}], ",", 
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.6`", ",", "0.4`", ",", "0.2`"}], "]"}]}], 
                   "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], "]"}], ",", 
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0.5`"}], "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], "]"}], ",", 
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.85`", ",", "0.85`"}], "]"}]}], "]"}],
                  ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], "]"}], ",", 
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.87`", ",", "0.94`", ",", "1"}], "]"}]}], "]"}],
                  ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], "]"}], ",", 
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "1", ",", "0.85`"}], "]"}]}], "]"}]}], 
               "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                 ",", #7, ",", #8, ",", #9, ",", #10, ",", #11, ",", #12, 
                 ",", #13, ",", #14, ",", #15, ",", #16}], "}"}]}], "}"}], 
         ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
         RowBox[{"LegendMarkers", "\[Rule]", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"None", ",", "None"}], "}"}], ",", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "None", ",", "None", ",", "None", ",", "None", ",", "None", 
                   ",", "None", ",", "None", ",", "None", ",", "None", ",", 
                   "None", ",", "None", ",", "None", ",", "None", ",", "None",
                    ",", "None", ",", "None"}], "}"}]}], "}"}]}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6083994346596813`*^9, 3.608399457302956*^9}, {
   3.6083995200301847`*^9, 3.608399549070067*^9}, 3.608461681841509*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PieChart", "[", 
    RowBox[{
     RowBox[{"Data", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"2", ";;", "3"}], ",", "#"}], "]"}], "]"}], ",", 
     RowBox[{"ChartLabels", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"Data", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"2", ";;", "3"}], ",", "1"}], "]"}], "]"}], ",", 
          "\"\<RadialCenter\>\""}], "]"}], ",", "None"}], "}"}]}], ",", 
     RowBox[{"ChartLegends", "\[Rule]", 
      RowBox[{"Data", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "#"}], "]"}], "]"}]}], ",", 
     RowBox[{"ChartStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "Black", ",", "Red", ",", "Green", ",", "Yellow", ",", "White", ",", 
        "Blue", ",", "Orange", ",", "Purple", ",", "Gray", ",", "Cyan", ",", 
        "Magenta", ",", "Brown", ",", "Pink", ",", "LightRed", ",", 
        "LightBlue", ",", "LightYellow", ",", "LightBrown", ",", 
        "LightPurple"}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], "&"}], "@", 
  RowBox[{"{", 
   RowBox[{
   "7", ",", "8", ",", "23", ",", "9", ",", "13", ",", "14", ",", "15", ",", 
    "19", ",", "25", ",", "17", ",", "26"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6083970563441477`*^9, 3.608397090403116*^9}, {
  3.60839715140376*^9, 3.608397171282466*^9}, {3.6084616725330257`*^9, 
  3.6084616765507507`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "take"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot take positions \[NoBreak]\\!\\(2\\)\[NoBreak] \
through \[NoBreak]\\!\\(3\\)\[NoBreak] in \[NoBreak]\\!\\({\\(\\({\\\"PE\\\", \
\\\"N\\\", \\\"Total\\\", \\\"Inti.\\\", \\\"Intgrt\\\", \\\"Reg.\\\", \
\\\"Irr.\\\", \\\"Pred.\\\", \\\"Init.B.\\\", \\\"Mdot\\\", \\\"Move\\\", \
\\\"Comm.I.\\\", \\\"Comm.R.\\\", \\\"Send.I.\\\", \\\"Send.R.\\\", \
\\\"KS\\\", \\\"Adjust\\\", \\\"OUT\\\", \\\"Barr.\\\", \\\"Barr.I.\\\", \
\\\"Barr.R.\\\", \\\"Reg.GPU.S\\\", \\\"Reg.GPU.P\\\", \\\"Comm.Adj.\\\", \
\\\"Mdot.Fic.\\\", \\\"Mdot.Fc.\\\", \\\"Mdot.Pot.\\\", \\\"Mdot.EC.\\\", \
\\\"Sort.B.\\\", \\\"HighV\\\", \\\"KS.Init.B\\\", \\\"KS.Int.S\\\", \
\\\"KS.Int.P\\\", \\\"KS.Comm.\\\", \\\"KS.Barr.\\\", \\\"KS.Move\\\", \
\\\"KS.Cmb.\\\", \\\"KS.Insert\\\", \\\"KS.Init.\\\", \\\"KS.Term.\\\", \
\\\"Hiar.\\\", \\\"KS.UP\\\", \\\"xtsub1\\\", \\\"xtsub2\\\"}\\)\\), \
\\(\\({8, 965718, 960.18361`, 23.98`, 932.12`, 56.09`, 153.97`, 12.62`, \
51.6`, 23.05`, 55.61`, 23.13`, 13.69`, 27.25`, 10.42`, 418.17`, 0.`, 32.22`, \
53.16`, 50.7`, 2.42`, 6.93`, 49.13`, 0.`, 3.19`, 0.`, 0.`, 0.`, 7.29`, 0.`, \
127.05`, 288.92`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.57`, 0.`, 0.`, 0.07`, 278.26`, \
1.49391`*^11, 9.12739`*^10}\\)\\)}\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Part/take\\\", ButtonNote -> \
\\\"Part::take\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.634361023349923*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "take"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot take positions \[NoBreak]\\!\\(2\\)\[NoBreak] \
through \[NoBreak]\\!\\(3\\)\[NoBreak] in \[NoBreak]\\!\\({\\(\\({\\\"PE\\\", \
\\\"N\\\", \\\"Total\\\", \\\"Inti.\\\", \\\"Intgrt\\\", \\\"Reg.\\\", \
\\\"Irr.\\\", \\\"Pred.\\\", \\\"Init.B.\\\", \\\"Mdot\\\", \\\"Move\\\", \
\\\"Comm.I.\\\", \\\"Comm.R.\\\", \\\"Send.I.\\\", \\\"Send.R.\\\", \
\\\"KS\\\", \\\"Adjust\\\", \\\"OUT\\\", \\\"Barr.\\\", \\\"Barr.I.\\\", \
\\\"Barr.R.\\\", \\\"Reg.GPU.S\\\", \\\"Reg.GPU.P\\\", \\\"Comm.Adj.\\\", \
\\\"Mdot.Fic.\\\", \\\"Mdot.Fc.\\\", \\\"Mdot.Pot.\\\", \\\"Mdot.EC.\\\", \
\\\"Sort.B.\\\", \\\"HighV\\\", \\\"KS.Init.B\\\", \\\"KS.Int.S\\\", \
\\\"KS.Int.P\\\", \\\"KS.Comm.\\\", \\\"KS.Barr.\\\", \\\"KS.Move\\\", \
\\\"KS.Cmb.\\\", \\\"KS.Insert\\\", \\\"KS.Init.\\\", \\\"KS.Term.\\\", \
\\\"Hiar.\\\", \\\"KS.UP\\\", \\\"xtsub1\\\", \\\"xtsub2\\\"}\\)\\), \
\\(\\({8, 965718, 960.18361`, 23.98`, 932.12`, 56.09`, 153.97`, 12.62`, \
51.6`, 23.05`, 55.61`, 23.13`, 13.69`, 27.25`, 10.42`, 418.17`, 0.`, 32.22`, \
53.16`, 50.7`, 2.42`, 6.93`, 49.13`, 0.`, 3.19`, 0.`, 0.`, 0.`, 7.29`, 0.`, \
127.05`, 288.92`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.57`, 0.`, 0.`, 0.07`, 278.26`, \
1.49391`*^11, 9.12739`*^10}\\)\\)}\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Part/take\\\", ButtonNote -> \
\\\"Part::take\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6343610233529253`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"PieChart", "::", "ldata"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\(\\({\\(\\({\\\"PE\\\", \\\"N\\\", \
\\\"Total\\\", \\\"Inti.\\\", \\\"Intgrt\\\", \\\"Reg.\\\", \\\"Irr.\\\", \
\\\"Pred.\\\", \\\"Init.B.\\\", \\\"Mdot\\\", \\\"Move\\\", \\\"Comm.I.\\\", \
\\\"Comm.R.\\\", \\\"Send.I.\\\", \\\"Send.R.\\\", \\\"KS\\\", \
\\\"Adjust\\\", \\\"OUT\\\", \\\"Barr.\\\", \\\"Barr.I.\\\", \\\"Barr.R.\\\", \
\\\"Reg.GPU.S\\\", \\\"Reg.GPU.P\\\", \\\"Comm.Adj.\\\", \\\"Mdot.Fic.\\\", \
\\\"Mdot.Fc.\\\", \\\"Mdot.Pot.\\\", \\\"Mdot.EC.\\\", \\\"Sort.B.\\\", \
\\\"HighV\\\", \\\"KS.Init.B\\\", \\\"KS.Int.S\\\", \\\"KS.Int.P\\\", \
\\\"KS.Comm.\\\", \\\"KS.Barr.\\\", \\\"KS.Move\\\", \\\"KS.Cmb.\\\", \
\\\"KS.Insert\\\", \\\"KS.Init.\\\", \\\"KS.Term.\\\", \\\"Hiar.\\\", \
\\\"KS.UP\\\", \\\"xtsub1\\\", \\\"xtsub2\\\"}\\)\\), \\(\\({8, 965718, \
960.18361`, 23.98`, 932.12`, 56.09`, 153.97`, 12.62`, 51.6`, 23.05`, 55.61`, \
23.13`, 13.69`, 27.25`, 10.42`, 418.17`, 0.`, 32.22`, 53.16`, 50.7`, 2.42`, \
6.93`, 49.13`, 0.`, 3.19`, 0.`, 0.`, 0.`, 7.29`, 0.`, 127.05`, 288.92`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.57`, 0.`, 0.`, 0.07`, 278.26`, 1.49391`*^11, \
9.12739`*^10}\\)\\)}\\)\\) \[LeftDoubleBracket] \\(\\(\\(\\(2 ;; 3\\)\\), \\(\
\\({7, 8, 23, 9, 13, 14, 15, 19, 25, 17, 26}\\)\\)\\)\\) \
\[RightDoubleBracket]\\)\[NoBreak] is not a valid dataset or list of \
datasets. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/PieChart\\\", ButtonNote -> \
\\\"PieChart::ldata\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6343610234740114`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "take"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot take positions \[NoBreak]\\!\\(2\\)\[NoBreak] \
through \[NoBreak]\\!\\(3\\)\[NoBreak] in \[NoBreak]\\!\\({\\(\\({\\\"PE\\\", \
\\\"N\\\", \\\"Total\\\", \\\"Inti.\\\", \\\"Intgrt\\\", \\\"Reg.\\\", \
\\\"Irr.\\\", \\\"Pred.\\\", \\\"Init.B.\\\", \\\"Mdot\\\", \\\"Move\\\", \
\\\"Comm.I.\\\", \\\"Comm.R.\\\", \\\"Send.I.\\\", \\\"Send.R.\\\", \
\\\"KS\\\", \\\"Adjust\\\", \\\"OUT\\\", \\\"Barr.\\\", \\\"Barr.I.\\\", \
\\\"Barr.R.\\\", \\\"Reg.GPU.S\\\", \\\"Reg.GPU.P\\\", \\\"Comm.Adj.\\\", \
\\\"Mdot.Fic.\\\", \\\"Mdot.Fc.\\\", \\\"Mdot.Pot.\\\", \\\"Mdot.EC.\\\", \
\\\"Sort.B.\\\", \\\"HighV\\\", \\\"KS.Init.B\\\", \\\"KS.Int.S\\\", \
\\\"KS.Int.P\\\", \\\"KS.Comm.\\\", \\\"KS.Barr.\\\", \\\"KS.Move\\\", \
\\\"KS.Cmb.\\\", \\\"KS.Insert\\\", \\\"KS.Init.\\\", \\\"KS.Term.\\\", \
\\\"Hiar.\\\", \\\"KS.UP\\\", \\\"xtsub1\\\", \\\"xtsub2\\\"}\\)\\), \
\\(\\({8, 965718, 960.18361`, 23.98`, 932.12`, 56.09`, 153.97`, 12.62`, \
51.6`, 23.05`, 55.61`, 23.13`, 13.69`, 27.25`, 10.42`, 418.17`, 0.`, 32.22`, \
53.16`, 50.7`, 2.42`, 6.93`, 49.13`, 0.`, 3.19`, 0.`, 0.`, 0.`, 7.29`, 0.`, \
127.05`, 288.92`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.57`, 0.`, 0.`, 0.07`, 278.26`, \
1.49391`*^11, 9.12739`*^10}\\)\\)}\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Part/take\\\", ButtonNote -> \
\\\"Part::take\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6343610234990525`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Part :: \
take\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6343610235250626`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"PieChart", "::", "ldata"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\(\\({\\(\\({\\\"PE\\\", \\\"N\\\", \
\\\"Total\\\", \\\"Inti.\\\", \\\"Intgrt\\\", \\\"Reg.\\\", \\\"Irr.\\\", \
\\\"Pred.\\\", \\\"Init.B.\\\", \\\"Mdot\\\", \\\"Move\\\", \\\"Comm.I.\\\", \
\\\"Comm.R.\\\", \\\"Send.I.\\\", \\\"Send.R.\\\", \\\"KS\\\", \
\\\"Adjust\\\", \\\"OUT\\\", \\\"Barr.\\\", \\\"Barr.I.\\\", \\\"Barr.R.\\\", \
\\\"Reg.GPU.S\\\", \\\"Reg.GPU.P\\\", \\\"Comm.Adj.\\\", \\\"Mdot.Fic.\\\", \
\\\"Mdot.Fc.\\\", \\\"Mdot.Pot.\\\", \\\"Mdot.EC.\\\", \\\"Sort.B.\\\", \
\\\"HighV\\\", \\\"KS.Init.B\\\", \\\"KS.Int.S\\\", \\\"KS.Int.P\\\", \
\\\"KS.Comm.\\\", \\\"KS.Barr.\\\", \\\"KS.Move\\\", \\\"KS.Cmb.\\\", \
\\\"KS.Insert\\\", \\\"KS.Init.\\\", \\\"KS.Term.\\\", \\\"Hiar.\\\", \
\\\"KS.UP\\\", \\\"xtsub1\\\", \\\"xtsub2\\\"}\\)\\), \\(\\({8, 965718, \
960.18361`, 23.98`, 932.12`, 56.09`, 153.97`, 12.62`, 51.6`, 23.05`, 55.61`, \
23.13`, 13.69`, 27.25`, 10.42`, 418.17`, 0.`, 32.22`, 53.16`, 50.7`, 2.42`, \
6.93`, 49.13`, 0.`, 3.19`, 0.`, 0.`, 0.`, 7.29`, 0.`, 127.05`, 288.92`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.57`, 0.`, 0.`, 0.07`, 278.26`, 1.49391`*^11, \
9.12739`*^10}\\)\\)}\\)\\) \[LeftDoubleBracket] \\(\\(\\(\\(2 ;; 3\\)\\), \\(\
\\({7, 8, 23, 9, 13, 14, 15, 19, 25, 17, 26}\\)\\)\\)\\) \
\[RightDoubleBracket]\\)\[NoBreak] is not a valid dataset or list of \
datasets. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/PieChart\\\", ButtonNote -> \
\\\"PieChart::ldata\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6343610236061225`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"PieChart", "::", "ldata"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\(\\({\\(\\({\\\"PE\\\", \\\"N\\\", \
\\\"Total\\\", \\\"Inti.\\\", \\\"Intgrt\\\", \\\"Reg.\\\", \\\"Irr.\\\", \
\\\"Pred.\\\", \\\"Init.B.\\\", \\\"Mdot\\\", \\\"Move\\\", \\\"Comm.I.\\\", \
\\\"Comm.R.\\\", \\\"Send.I.\\\", \\\"Send.R.\\\", \\\"KS\\\", \
\\\"Adjust\\\", \\\"OUT\\\", \\\"Barr.\\\", \\\"Barr.I.\\\", \\\"Barr.R.\\\", \
\\\"Reg.GPU.S\\\", \\\"Reg.GPU.P\\\", \\\"Comm.Adj.\\\", \\\"Mdot.Fic.\\\", \
\\\"Mdot.Fc.\\\", \\\"Mdot.Pot.\\\", \\\"Mdot.EC.\\\", \\\"Sort.B.\\\", \
\\\"HighV\\\", \\\"KS.Init.B\\\", \\\"KS.Int.S\\\", \\\"KS.Int.P\\\", \
\\\"KS.Comm.\\\", \\\"KS.Barr.\\\", \\\"KS.Move\\\", \\\"KS.Cmb.\\\", \
\\\"KS.Insert\\\", \\\"KS.Init.\\\", \\\"KS.Term.\\\", \\\"Hiar.\\\", \
\\\"KS.UP\\\", \\\"xtsub1\\\", \\\"xtsub2\\\"}\\)\\), \\(\\({8, 965718, \
960.18361`, 23.98`, 932.12`, 56.09`, 153.97`, 12.62`, 51.6`, 23.05`, 55.61`, \
23.13`, 13.69`, 27.25`, 10.42`, 418.17`, 0.`, 32.22`, 53.16`, 50.7`, 2.42`, \
6.93`, 49.13`, 0.`, 3.19`, 0.`, 0.`, 0.`, 7.29`, 0.`, 127.05`, 288.92`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.57`, 0.`, 0.`, 0.07`, 278.26`, 1.49391`*^11, \
9.12739`*^10}\\)\\)}\\)\\) \[LeftDoubleBracket] \\(\\(\\(\\(2 ;; 3\\)\\), \\(\
\\({7, 8, 23, 9, 13, 14, 15, 19, 25, 17, 26}\\)\\)\\)\\) \
\[RightDoubleBracket]\\)\[NoBreak] is not a valid dataset or list of \
datasets. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/PieChart\\\", ButtonNote -> \
\\\"PieChart::ldata\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.634361023685162*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(PieChart \
:: ldata\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.634361023713193*^9}],

Cell[BoxData[
 RowBox[{"PieChart", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\<\"PE\"\>", ",", "\<\"N\"\>", ",", "\<\"Total\"\>", 
        ",", "\<\"Inti.\"\>", ",", "\<\"Intgrt\"\>", ",", "\<\"Reg.\"\>", 
        ",", "\<\"Irr.\"\>", ",", "\<\"Pred.\"\>", ",", "\<\"Init.B.\"\>", 
        ",", "\<\"Mdot\"\>", ",", "\<\"Move\"\>", ",", "\<\"Comm.I.\"\>", 
        ",", "\<\"Comm.R.\"\>", ",", "\<\"Send.I.\"\>", 
        ",", "\<\"Send.R.\"\>", ",", "\<\"KS\"\>", ",", "\<\"Adjust\"\>", 
        ",", "\<\"OUT\"\>", ",", "\<\"Barr.\"\>", ",", "\<\"Barr.I.\"\>", 
        ",", "\<\"Barr.R.\"\>", ",", "\<\"Reg.GPU.S\"\>", 
        ",", "\<\"Reg.GPU.P\"\>", ",", "\<\"Comm.Adj.\"\>", 
        ",", "\<\"Mdot.Fic.\"\>", ",", "\<\"Mdot.Fc.\"\>", 
        ",", "\<\"Mdot.Pot.\"\>", ",", "\<\"Mdot.EC.\"\>", 
        ",", "\<\"Sort.B.\"\>", ",", "\<\"HighV\"\>", 
        ",", "\<\"KS.Init.B\"\>", ",", "\<\"KS.Int.S\"\>", 
        ",", "\<\"KS.Int.P\"\>", ",", "\<\"KS.Comm.\"\>", 
        ",", "\<\"KS.Barr.\"\>", ",", "\<\"KS.Move\"\>", 
        ",", "\<\"KS.Cmb.\"\>", ",", "\<\"KS.Insert\"\>", 
        ",", "\<\"KS.Init.\"\>", ",", "\<\"KS.Term.\"\>", 
        ",", "\<\"Hiar.\"\>", ",", "\<\"KS.UP\"\>", ",", "\<\"xtsub1\"\>", 
        ",", "\<\"xtsub2\"\>"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "8", ",", "965718", ",", "960.18361`", ",", "23.98`", ",", "932.12`", 
        ",", "56.09`", ",", "153.97`", ",", "12.62`", ",", "51.6`", ",", 
        "23.05`", ",", "55.61`", ",", "23.13`", ",", "13.69`", ",", "27.25`", 
        ",", "10.42`", ",", "418.17`", ",", "0.`", ",", "32.22`", ",", 
        "53.16`", ",", "50.7`", ",", "2.42`", ",", "6.93`", ",", "49.13`", 
        ",", "0.`", ",", "3.19`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
        "7.29`", ",", "0.`", ",", "127.05`", ",", "288.92`", ",", "0.`", ",", 
        "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.57`", ",", "0.`", 
        ",", "0.`", ",", "0.07`", ",", "278.26`", ",", "1.49391`*^11", ",", 
        "9.12739`*^10"}], "}"}]}], "}"}], "\[LeftDoubleBracket]", 
    RowBox[{
     RowBox[{"2", ";;", "3"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "7", ",", "8", ",", "23", ",", "9", ",", "13", ",", "14", ",", "15", 
       ",", "19", ",", "25", ",", "17", ",", "26"}], "}"}]}], 
    "\[RightDoubleBracket]"}], ",", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"PE\"\>", ",", "\<\"N\"\>", ",", "\<\"Total\"\>", 
             ",", "\<\"Inti.\"\>", ",", "\<\"Intgrt\"\>", ",", "\<\"Reg.\"\>",
              ",", "\<\"Irr.\"\>", ",", "\<\"Pred.\"\>", 
             ",", "\<\"Init.B.\"\>", ",", "\<\"Mdot\"\>", ",", "\<\"Move\"\>",
              ",", "\<\"Comm.I.\"\>", ",", "\<\"Comm.R.\"\>", 
             ",", "\<\"Send.I.\"\>", ",", "\<\"Send.R.\"\>", 
             ",", "\<\"KS\"\>", ",", "\<\"Adjust\"\>", ",", "\<\"OUT\"\>", 
             ",", "\<\"Barr.\"\>", ",", "\<\"Barr.I.\"\>", 
             ",", "\<\"Barr.R.\"\>", ",", "\<\"Reg.GPU.S\"\>", 
             ",", "\<\"Reg.GPU.P\"\>", ",", "\<\"Comm.Adj.\"\>", 
             ",", "\<\"Mdot.Fic.\"\>", ",", "\<\"Mdot.Fc.\"\>", 
             ",", "\<\"Mdot.Pot.\"\>", ",", "\<\"Mdot.EC.\"\>", 
             ",", "\<\"Sort.B.\"\>", ",", "\<\"HighV\"\>", 
             ",", "\<\"KS.Init.B\"\>", ",", "\<\"KS.Int.S\"\>", 
             ",", "\<\"KS.Int.P\"\>", ",", "\<\"KS.Comm.\"\>", 
             ",", "\<\"KS.Barr.\"\>", ",", "\<\"KS.Move\"\>", 
             ",", "\<\"KS.Cmb.\"\>", ",", "\<\"KS.Insert\"\>", 
             ",", "\<\"KS.Init.\"\>", ",", "\<\"KS.Term.\"\>", 
             ",", "\<\"Hiar.\"\>", ",", "\<\"KS.UP\"\>", 
             ",", "\<\"xtsub1\"\>", ",", "\<\"xtsub2\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "8", ",", "965718", ",", "960.18361`", ",", "23.98`", ",", 
             "932.12`", ",", "56.09`", ",", "153.97`", ",", "12.62`", ",", 
             "51.6`", ",", "23.05`", ",", "55.61`", ",", "23.13`", ",", 
             "13.69`", ",", "27.25`", ",", "10.42`", ",", "418.17`", ",", 
             "0.`", ",", "32.22`", ",", "53.16`", ",", "50.7`", ",", "2.42`", 
             ",", "6.93`", ",", "49.13`", ",", "0.`", ",", "3.19`", ",", 
             "0.`", ",", "0.`", ",", "0.`", ",", "7.29`", ",", "0.`", ",", 
             "127.05`", ",", "288.92`", ",", "0.`", ",", "0.`", ",", "0.`", 
             ",", "0.`", ",", "0.`", ",", "0.57`", ",", "0.`", ",", "0.`", 
             ",", "0.07`", ",", "278.26`", ",", "1.49391`*^11", ",", 
             "9.12739`*^10"}], "}"}]}], "}"}], "\[LeftDoubleBracket]", 
         RowBox[{
          RowBox[{"2", ";;", "3"}], ",", "1"}], "\[RightDoubleBracket]"}], 
        ",", "\<\"RadialCenter\"\>"}], "]"}], ",", "None"}], "}"}]}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"Irr.\"\>", ",", "\<\"Pred.\"\>", ",", "\<\"Reg.GPU.P\"\>", 
      ",", "\<\"Init.B.\"\>", ",", "\<\"Comm.R.\"\>", ",", "\<\"Send.I.\"\>", 
      ",", "\<\"Send.R.\"\>", ",", "\<\"Barr.\"\>", ",", "\<\"Mdot.Fic.\"\>", 
      ",", "\<\"Adjust\"\>", ",", "\<\"Mdot.Fc.\"\>"}], "}"}]}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->GrayLevel[0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "GrayLevel[0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["GrayLevelColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       GrayLevel[0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->GrayLevel[0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "GrayLevel[1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["GrayLevelColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       GrayLevel[1],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0., 0., 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
           
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1, 0.5, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0.5, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.33333333333333337`, 0., 0.33333333333333337`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.5, 0, 0.5]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.5, 0, 0.5]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.5, 0, 0.5],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {GrayLevel[0.5], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->GrayLevel[0.33333333333333337`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "GrayLevel[0.5]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.5]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["GrayLevelColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       GrayLevel[0.5],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0, 1, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0., 0.6666666666666666, 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0, 1, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 1],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.6666666666666666, 0., 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 1],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.6, 0.4, 0.2], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.6, 0.4, 0.2]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.6, 0.4, 0.2]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.6, 0.4, 0.2],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 0.5, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666666, 0.33333333333333337`, 0.33333333333333337`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1, 0.5, 0.5]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[1, 0.5, 0.5]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0.5, 0.5],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 0.85, 0.85], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666666, 0.5666666666666667, 0.5666666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1, 0.85, 0.85]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[1, 0.85, 0.85]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0.85, 0.85],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.87, 0.94, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5800000000000001, 0.6266666666666667, 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.87, 0.94, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.87, 0.94, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.87, 0.94, 1],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 1, 0.85], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666666, 0.6666666666666666, 0.5666666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1, 1, 0.85]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0.85]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0.85],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.94, 0.91, 0.88], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6266666666666667, 0.6066666666666667, 0.5866666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.94, 0.91, 0.88]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.94, 0.91, 0.88]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.94, 0.91, 0.88],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.94, 0.88, 0.94], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6266666666666667, 0.5866666666666667, 0.6266666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.94, 0.88, 0.94]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.94, 0.88, 0.94]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.94, 0.88, 0.94],
       Editable->False,
       Selectable->False]}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.608397091422083*^9, 3.608397114988756*^9}, {
   3.608397152373034*^9, 3.608397171896781*^9}, 3.634361023819257*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pie", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"PieChart", "[", 
     RowBox[{
      RowBox[{"Data", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "#"}], "]"}], "]"}], ",", 
      RowBox[{"ChartLegends", "\[Rule]", 
       RowBox[{"Data", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "#"}], "]"}], "]"}]}], ",", 
      RowBox[{"ChartStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "Black", ",", "Red", ",", "Green", ",", "Yellow", ",", "White", ",", 
         "Blue", ",", "Orange", ",", "Purple", ",", "Gray", ",", "Cyan", ",", 
         "Magenta", ",", "Brown", ",", "Pink", ",", "LightRed", ",", 
         "LightBlue", ",", "LightYellow", ",", "LightBrown", ",", 
         "LightGreen"}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}], "&"}], "@", 
   RowBox[{"{", 
    RowBox[{
    "6", ",", "7", ",", "8", ",", "9", ",", "10", ",", "17", ",", "11", ",", 
     "12", ",", "13", ",", "14", ",", "15", ",", "18", ",", "31", ",", "42", 
     ",", "43"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.608399438391941*^9, 3.6083994562854137`*^9}, {
   3.608399518597815*^9, 3.608399548276744*^9}, {3.608461679190596*^9, 
   3.608461680918668*^9}, {3.6193481024697466`*^9, 3.6193481234680104`*^9}, 
   3.619348159278438*^9, {3.619348204258932*^9, 3.619348302097336*^9}, {
   3.6193483449680758`*^9, 3.6193483788856373`*^9}, {3.6343612988668656`*^9, 
   3.634361329203432*^9}, {3.63436136822013*^9, 3.634361384241525*^9}, {
   3.634361523841156*^9, 3.634361558633867*^9}, {3.634361791205181*^9, 
   3.634361796310808*^9}, {3.6343618376932096`*^9, 3.634361838188573*^9}, {
   3.6343621030594883`*^9, 3.634362126239976*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$29834$30021 = False, DynamicChart`click$29837$30021 = 
       False, DynamicChart`click$29840$30021 = False, 
       DynamicChart`click$29843$30021 = False, DynamicChart`click$29846$30021 = 
       False, DynamicChart`click$29849$30021 = False, 
       DynamicChart`click$29852$30021 = False, DynamicChart`click$29855$30021 = 
       False, DynamicChart`click$29858$30021 = False, 
       DynamicChart`click$29861$30021 = False, DynamicChart`click$29864$30021 = 
       False, DynamicChart`click$29867$30021 = False, 
       DynamicChart`click$29870$30021 = False, DynamicChart`click$29873$30021 = 
       False, DynamicChart`click$29876$30021 = False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{
             Directive[
              RGBColor[0.982864, 0.7431472, 0.3262672]], {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                GrayLevel[0]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {2.7511601893127167`, 
                    3.141592653589793}]}], StatusArea[#, 56.09]& , TagBoxNote -> 
                    "56.09"], 
                   StyleBox["56.09`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[56.09, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$29834$30021, 
                    FEPrivate`Not[DynamicChart`click$29834$30021]], 
                   PassEventsDown -> True, PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$29834$30021, {{{1., 0}, {
                    0, 1.}}, {-0.19620114961251475`, 0.03879573289329133}}, {{
                  1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$29834$30021}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[1, 0, 0]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.6794025404494353`, 
                    2.7511601893127167`}]}], StatusArea[#, 153.97]& , 
                    TagBoxNote -> "153.97"], 
                   StyleBox["153.97`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[153.97, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$29837$30021, 
                    FEPrivate`Not[DynamicChart`click$29837$30021]], 
                   PassEventsDown -> True, PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$29837$30021, {{{1., 0}, {
                    0, 1.}}, {-0.12015737057445514`, 
                   0.15988185105456176`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                  1}}], 
                 TrackedSymbols :> {DynamicChart`click$29837$30021}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0, 1, 0]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.5915569761924073`, 
                    1.6794025404494353`}]}], StatusArea[#, 12.62]& , 
                    TagBoxNote -> "12.62"], 
                   StyleBox["12.62`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[12.62, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$29840$30021, 
                    FEPrivate`Not[DynamicChart`click$29840$30021]], 
                   PassEventsDown -> True, PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$29840$30021, {{{1., 0}, {
                    0, 1.}}, {-0.012927667125369616`, 0.1995817512266481}}, {{
                  1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$29840$30021}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[1, 1, 0]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.232378599357015, 
                    1.5915569761924073`}]}], StatusArea[#, 51.6]& , 
                    TagBoxNote -> "51.6"], 
                   StyleBox["51.6`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[51.6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$29843$30021, 
                    FEPrivate`Not[DynamicChart`click$29843$30021]], 
                   PassEventsDown -> True, PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$29843$30021, {{{1., 0}, {0, 1.}}, {
                   0.031632319864048686`, 0.19748264819983175`}}, {{1, 0}, {0,
                   1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$29843$30021}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                GrayLevel[1]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.0719316693946936`, 
                    1.232378599357015}]}], StatusArea[#, 23.05]& , TagBoxNote -> 
                    "23.05"], 
                   StyleBox["23.05`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[23.05, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$29846$30021, 
                    FEPrivate`Not[DynamicChart`click$29846$30021]], 
                   PassEventsDown -> True, PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$29846$30021, {{{1., 0}, {0, 1.}}, {
                   0.08130387296626938, 0.18272843303844297`}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$29846$30021}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0, 0, 1]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.883780670831503, 
                    1.0719316693946936`}]}], StatusArea[#, 27.03]& , 
                    TagBoxNote -> "27.03"], 
                   StyleBox["27.03`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[27.03, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$29849$30021, 
                    FEPrivate`Not[DynamicChart`click$29849$30021]], 
                   PassEventsDown -> True, PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$29849$30021, {{{1., 0}, {0, 1.}}, {
                   0.11176034208941854`, 0.16586026026766068`}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$29849$30021}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[1, 0.5, 0]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.4966894007575462, 
                    0.883780670831503}]}], StatusArea[#, 55.61]& , TagBoxNote -> 
                    "55.61"], 
                   StyleBox["55.61`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[55.61, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$29852$30021, 
                    FEPrivate`Not[DynamicChart`click$29852$30021]], 
                   PassEventsDown -> True, PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$29852$30021, {{{1., 0}, {0, 1.}}, {
                   0.1542192769347195, 0.12734368701169405`}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$29852$30021}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.5, 0, 0.5]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.3356856050947048, 
                    0.4966894007575462}]}], StatusArea[#, 23.13]& , 
                    TagBoxNote -> "23.13"], 
                   StyleBox["23.13`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[23.13, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$29855$30021, 
                    FEPrivate`Not[DynamicChart`click$29855$30021]], 
                   PassEventsDown -> True, PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$29855$30021, {{{1., 0}, {0, 1.}}, {
                   0.18292737723068792`, 0.08085526983135734}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$29855$30021}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                GrayLevel[0.5]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.24039196209322178`, 
                    0.3356856050947048}]}], StatusArea[#, 13.69]& , 
                    TagBoxNote -> "13.69"], 
                   StyleBox["13.69`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[13.69, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$29858$30021, 
                    FEPrivate`Not[DynamicChart`click$29858$30021]], 
                   PassEventsDown -> True, PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$29858$30021, {{{1., 0}, {0, 1.}}, {
                   0.19176056929376842`, 0.056814470552226784`}}, {{1, 0}, {0,
                   1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$29858$30021}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0, 1, 1]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.05070958285360083, 
                    0.24039196209322178`}]}], StatusArea[#, 27.25]& , 
                    TagBoxNote -> "27.25"], 
                   StyleBox["27.25`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[27.25, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$29861$30021, 
                    FEPrivate`Not[DynamicChart`click$29861$30021]], 
                   PassEventsDown -> True, PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$29861$30021, {{{1., 0}, {0, 1.}}, {
                   0.1978852346680112, 0.029007480076458647`}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$29861$30021}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[1, 0, 1]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.021822174639127834`, 
                    0.05070958285360083}]}], StatusArea[#, 10.42]& , 
                    TagBoxNote -> "10.42"], 
                   StyleBox["10.42`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[10.42, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$29864$30021, 
                    FEPrivate`Not[DynamicChart`click$29864$30021]], 
                   PassEventsDown -> True, PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$29864$30021, {{{1., 0}, {0, 1.}}, {
                   0.19997913830385167`, 0.0028886403806933853`}}, {{1, 0}, {
                  0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$29864$30021}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.6, 0.4, 0.2]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-0.24609983552355263`, -0.021822174639127834`}]}], 
                    StatusArea[#, 32.22]& , TagBoxNote -> "32.22"], 
                   StyleBox["32.22`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[32.22, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$29867$30021, 
                    FEPrivate`Not[DynamicChart`click$29867$30021]], 
                   PassEventsDown -> True, PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$29867$30021, {{{1., 0}, {0, 1.}}, {
                   0.1982081269969015, -0.026712139419750116`}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$29867$30021}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[1, 0.5, 0.5]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.1304721761618577`, -0.24609983552355263`}]}], 
                    StatusArea[#, 127.05]& , TagBoxNote -> "127.05"], 
                   StyleBox["127.05`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[127.05, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$29870$30021, 
                    FEPrivate`Not[DynamicChart`click$29870$30021]], 
                   PassEventsDown -> True, PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$29870$30021, {{{1., 0}, {0, 1.}}, {
                   0.15446718052008243`, -0.12704286734081638`}}, {{1, 0}, {0,
                   1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$29870$30021}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[1, 0.85, 0.85]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.0673902989955053`, -1.1304721761618577`}]}], 
                    StatusArea[#, 278.26]& , TagBoxNote -> "278.26"], 
                   StyleBox["278.26`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[278.26, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$29873$30021, 
                    FEPrivate`Not[DynamicChart`click$29873$30021]], 
                   PassEventsDown -> True, PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$29873$30021, {{{1., 0}, {
                    0, 1.}}, {-0.1007846501423394, -0.17274968681791075`}}, {{
                  1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$29873$30021}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.87, 0.94, 1]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -3.0673902989955053`}]}], 
                    StatusArea[#, 10.66]& , TagBoxNote -> "10.66"], 
                   StyleBox["10.66`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[10.66, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$29876$30021, 
                    FEPrivate`Not[DynamicChart`click$29876$30021]], 
                   PassEventsDown -> True, PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$29876$30021, {{{1., 0}, {
                    0, 1.}}, {-0.19986236605313357`, -0.007418533254170916}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {
                  DynamicChart`click$29876$30021}]]}}}}}, {}}, {{}}}}, {{{{
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               
               TagBox[{{}, {}}, StatusArea[#, 56.09]& , TagBoxNote -> 
                "56.09"], 
               StyleBox["56.09`", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[56.09, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$29834$30021, 
                 FEPrivate`Not[DynamicChart`click$29834$30021]], 
               PassEventsDown -> True, PassEventsDown -> Automatic, 
               PassEventsUp -> True}]], 
            Dynamic[
             If[
             DynamicChart`click$29834$30021, {{{1., 0}, {
                0, 1.}}, {-0.19620114961251475`, 0.03879573289329133}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$29834$30021}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               
               TagBox[{{}, {}}, StatusArea[#, 153.97]& , TagBoxNote -> 
                "153.97"], 
               StyleBox["153.97`", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[153.97, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$29837$30021, 
                 FEPrivate`Not[DynamicChart`click$29837$30021]], 
               PassEventsDown -> True, PassEventsDown -> Automatic, 
               PassEventsUp -> True}]], 
            Dynamic[
             If[
             DynamicChart`click$29837$30021, {{{1., 0}, {
                0, 1.}}, {-0.12015737057445514`, 0.15988185105456176`}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$29837$30021}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               
               TagBox[{{}, {}}, StatusArea[#, 12.62]& , TagBoxNote -> 
                "12.62"], 
               StyleBox["12.62`", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[12.62, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$29840$30021, 
                 FEPrivate`Not[DynamicChart`click$29840$30021]], 
               PassEventsDown -> True, PassEventsDown -> Automatic, 
               PassEventsUp -> True}]], 
            Dynamic[
             If[
             DynamicChart`click$29840$30021, {{{1., 0}, {
                0, 1.}}, {-0.012927667125369616`, 0.1995817512266481}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$29840$30021}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 51.6]& , TagBoxNote -> "51.6"], 
               
               StyleBox["51.6`", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[51.6, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$29843$30021, 
                 FEPrivate`Not[DynamicChart`click$29843$30021]], 
               PassEventsDown -> True, PassEventsDown -> Automatic, 
               PassEventsUp -> True}]], 
            Dynamic[
             If[
             DynamicChart`click$29843$30021, {{{1., 0}, {0, 1.}}, {
               0.031632319864048686`, 0.19748264819983175`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$29843$30021}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               
               TagBox[{{}, {}}, StatusArea[#, 23.05]& , TagBoxNote -> 
                "23.05"], 
               StyleBox["23.05`", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[23.05, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$29846$30021, 
                 FEPrivate`Not[DynamicChart`click$29846$30021]], 
               PassEventsDown -> True, PassEventsDown -> Automatic, 
               PassEventsUp -> True}]], 
            Dynamic[
             If[
             DynamicChart`click$29846$30021, {{{1., 0}, {0, 1.}}, {
               0.08130387296626938, 0.18272843303844297`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$29846$30021}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               
               TagBox[{{}, {}}, StatusArea[#, 27.03]& , TagBoxNote -> 
                "27.03"], 
               StyleBox["27.03`", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[27.03, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$29849$30021, 
                 FEPrivate`Not[DynamicChart`click$29849$30021]], 
               PassEventsDown -> True, PassEventsDown -> Automatic, 
               PassEventsUp -> True}]], 
            Dynamic[
             If[
             DynamicChart`click$29849$30021, {{{1., 0}, {0, 1.}}, {
               0.11176034208941854`, 0.16586026026766068`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$29849$30021}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               
               TagBox[{{}, {}}, StatusArea[#, 55.61]& , TagBoxNote -> 
                "55.61"], 
               StyleBox["55.61`", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[55.61, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$29852$30021, 
                 FEPrivate`Not[DynamicChart`click$29852$30021]], 
               PassEventsDown -> True, PassEventsDown -> Automatic, 
               PassEventsUp -> True}]], 
            Dynamic[
             If[
             DynamicChart`click$29852$30021, {{{1., 0}, {0, 1.}}, {
               0.1542192769347195, 0.12734368701169405`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$29852$30021}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               
               TagBox[{{}, {}}, StatusArea[#, 23.13]& , TagBoxNote -> 
                "23.13"], 
               StyleBox["23.13`", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[23.13, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$29855$30021, 
                 FEPrivate`Not[DynamicChart`click$29855$30021]], 
               PassEventsDown -> True, PassEventsDown -> Automatic, 
               PassEventsUp -> True}]], 
            Dynamic[
             If[
             DynamicChart`click$29855$30021, {{{1., 0}, {0, 1.}}, {
               0.18292737723068792`, 0.08085526983135734}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$29855$30021}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               
               TagBox[{{}, {}}, StatusArea[#, 13.69]& , TagBoxNote -> 
                "13.69"], 
               StyleBox["13.69`", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[13.69, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$29858$30021, 
                 FEPrivate`Not[DynamicChart`click$29858$30021]], 
               PassEventsDown -> True, PassEventsDown -> Automatic, 
               PassEventsUp -> True}]], 
            Dynamic[
             If[
             DynamicChart`click$29858$30021, {{{1., 0}, {0, 1.}}, {
               0.19176056929376842`, 0.056814470552226784`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$29858$30021}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               
               TagBox[{{}, {}}, StatusArea[#, 27.25]& , TagBoxNote -> 
                "27.25"], 
               StyleBox["27.25`", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[27.25, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$29861$30021, 
                 FEPrivate`Not[DynamicChart`click$29861$30021]], 
               PassEventsDown -> True, PassEventsDown -> Automatic, 
               PassEventsUp -> True}]], 
            Dynamic[
             If[
             DynamicChart`click$29861$30021, {{{1., 0}, {0, 1.}}, {
               0.1978852346680112, 0.029007480076458647`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$29861$30021}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               
               TagBox[{{}, {}}, StatusArea[#, 10.42]& , TagBoxNote -> 
                "10.42"], 
               StyleBox["10.42`", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[10.42, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$29864$30021, 
                 FEPrivate`Not[DynamicChart`click$29864$30021]], 
               PassEventsDown -> True, PassEventsDown -> Automatic, 
               PassEventsUp -> True}]], 
            Dynamic[
             If[
             DynamicChart`click$29864$30021, {{{1., 0}, {0, 1.}}, {
               0.19997913830385167`, 0.0028886403806933853`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$29864$30021}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               
               TagBox[{{}, {}}, StatusArea[#, 32.22]& , TagBoxNote -> 
                "32.22"], 
               StyleBox["32.22`", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[32.22, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$29867$30021, 
                 FEPrivate`Not[DynamicChart`click$29867$30021]], 
               PassEventsDown -> True, PassEventsDown -> Automatic, 
               PassEventsUp -> True}]], 
            Dynamic[
             If[
             DynamicChart`click$29867$30021, {{{1., 0}, {0, 1.}}, {
               0.1982081269969015, -0.026712139419750116`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$29867$30021}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               
               TagBox[{{}, {}}, StatusArea[#, 127.05]& , TagBoxNote -> 
                "127.05"], 
               StyleBox["127.05`", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[127.05, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$29870$30021, 
                 FEPrivate`Not[DynamicChart`click$29870$30021]], 
               PassEventsDown -> True, PassEventsDown -> Automatic, 
               PassEventsUp -> True}]], 
            Dynamic[
             If[
             DynamicChart`click$29870$30021, {{{1., 0}, {0, 1.}}, {
               0.15446718052008243`, -0.12704286734081638`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$29870$30021}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               
               TagBox[{{}, {}}, StatusArea[#, 278.26]& , TagBoxNote -> 
                "278.26"], 
               StyleBox["278.26`", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[278.26, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$29873$30021, 
                 FEPrivate`Not[DynamicChart`click$29873$30021]], 
               PassEventsDown -> True, PassEventsDown -> Automatic, 
               PassEventsUp -> True}]], 
            Dynamic[
             If[
             DynamicChart`click$29873$30021, {{{1., 0}, {
                0, 1.}}, {-0.1007846501423394, -0.17274968681791075`}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$29873$30021}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               
               TagBox[{{}, {}}, StatusArea[#, 10.66]& , TagBoxNote -> 
                "10.66"], 
               StyleBox["10.66`", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[10.66, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$29876$30021, 
                 FEPrivate`Not[DynamicChart`click$29876$30021]], 
               PassEventsDown -> True, PassEventsDown -> Automatic, 
               PassEventsUp -> True}]], 
            Dynamic[
             If[
             DynamicChart`click$29876$30021, {{{1., 0}, {
                0, 1.}}, {-0.19986236605313357`, -0.007418533254170916}}, {{1,
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {
              DynamicChart`click$29876$30021}]]}, {}}}, {}}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    ContentSelectable -> False, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, LabelStyle -> {
       GrayLevel[0], FontFamily -> "Arial"}, 
     PlotRange -> {{-1.2, 1.2}, {-1.2, 1.2}}, PlotRangePadding -> 
     Scaled[0.02]}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Reg.\"", "\"Irr.\"", "\"Pred.\"", "\"Init.B.\"", "\"Mdot\"", 
       "\"Adjust\"", "\"Move\"", "\"Comm.I.\"", "\"Comm.R.\"", "\"Send.I.\"", 
       "\"Send.R.\"", "\"OUT\"", "\"KS.Init.B\"", "\"KS.UP\"", "\"KS.P\""}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    GrayLevel[0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0, 1, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[1, 1, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    GrayLevel[1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[1, 0.5, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.5, 0, 0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    GrayLevel[0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0, 1, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[1, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.6, 0.4, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #12}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[1, 0.5, 0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #13}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[1, 0.85, 0.85]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #14}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.87, 0.94, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #15}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial", 
          GrayLevel[0]}, Background -> Automatic, StripOnInput -> False], 
        TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 1, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 1, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0.5, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0.5, 0, 0.5]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0.5]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                  "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 1, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0.6, 0.4, 0.2]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0.5, 0.5]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.85, 0.85], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.5666666666666667, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0.85, 0.85]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.85, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.85, 0.85], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.87, 0.94, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5800000000000001, 0.6266666666666667, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0.87, 0.94, 1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.87, 0.94, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.87, 0.94, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11, ",", #12, ",", #13, 
               ",", #14, ",", #15}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 
                 RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}]}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "None", ",", "None", ",", "None", ",", "None", ",", "None", 
                   ",", "None", ",", "None", ",", "None", ",", "None", ",", 
                   "None", ",", "None", ",", "None", ",", "None", ",", "None",
                    ",", "None"}], "}"}], "}"}]}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6193481246242723`*^9, 3.6193481675441008`*^9, 3.619348206555793*^9, 
   3.61934831420684*^9, {3.6193483463430295`*^9, 3.6193483797606473`*^9}, 
   3.634361103595934*^9, {3.634361299889574*^9, 3.634361329885889*^9}, {
   3.634361369383951*^9, 3.634361384935999*^9}, {3.6343615251110697`*^9, 
   3.634361559282346*^9}, 3.634361797029312*^9, 3.634361839129223*^9, {
   3.6343621043083925`*^9, 3.634362126818385*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<C:\\\\Users\\\\lwang\\\\OneDrive\\\\Documents\\\\Datas\\\\NBPrf\\\\1M_\
hyd\\\\pie_chart_r7.png\>\"", ",", "pie"}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.634361960901826*^9, 3.6343619850970383`*^9}}],

Cell[BoxData["\<\"C:\\\\Users\\\\lwang\\\\OneDrive\\\\Documents\\\\Datas\\\\\
NBPrf\\\\1M_hyd\\\\pie_chart_r7.png\"\>"], "Output",
 CellChangeTimes->{3.6343619869283104`*^9}]
}, Open  ]]
},
WindowSize->{1902, 979},
WindowMargins->{{1, Automatic}, {Automatic, 1}},
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (July 1, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 329, 8, 31, "Input"],
Cell[889, 30, 275, 7, 31, "Input"],
Cell[1167, 39, 279, 7, 31, "Input"],
Cell[1449, 48, 422, 10, 31, "Input"],
Cell[1874, 60, 332, 8, 31, "Input"],
Cell[2209, 70, 319, 8, 31, "Input"],
Cell[CellGroupData[{
Cell[2553, 82, 578, 15, 31, "Input"],
Cell[3134, 99, 3678, 98, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6849, 202, 3796, 72, 112, "Input"],
Cell[10648, 276, 149189, 3056, 517, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[159874, 3337, 669, 16, 66, "Input"],
Cell[160546, 3355, 263, 3, 31, "Output"],
Cell[160812, 3360, 270, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[161119, 3368, 1538, 38, 72, "Input"],
Cell[162660, 3408, 114326, 2502, 317, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[277023, 5915, 1510, 38, 66, "Input"],
Cell[278536, 5955, 1598, 25, 70, "Message"],
Cell[280137, 5982, 1600, 25, 70, "Message"],
Cell[281740, 6009, 1694, 27, 88, "Message"],
Cell[283437, 6038, 1600, 25, 70, "Message"],
Cell[285040, 6065, 529, 11, 21, "Message"],
Cell[285572, 6078, 1694, 27, 88, "Message"],
Cell[287269, 6107, 1692, 27, 88, "Message"],
Cell[288964, 6136, 532, 11, 21, "Message"],
Cell[289499, 6149, 35755, 880, 229, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[325291, 7034, 1700, 35, 66, "Input"],
Cell[326994, 7071, 123944, 2571, 450, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[450975, 9647, 298, 7, 52, "Input"],
Cell[451276, 9656, 174, 2, 31, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
